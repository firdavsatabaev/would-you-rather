{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import ResultsCard from'./ResultsCard';import QuestionCard from'./QuestionCard';import NotFoundPage from'../NotFoundPage';/**\n * Functional component representing poll details component.\n * @param Refer to PropTypes\n */function PollDetails(props){var params=props.match.params;var question_id=params.question_id;var authedUser=props.authedUser,users=props.users,questions=props.questions;return/*#__PURE__*/React.createElement(\"div\",null,questions[question_id]?/*#__PURE__*/React.createElement(\"div\",null,Object.keys(users[authedUser].answers).includes(question_id)?/*#__PURE__*/React.createElement(ResultsCard,{question_id:question_id}):/*#__PURE__*/React.createElement(QuestionCard,{question_id:question_id})):/*#__PURE__*/React.createElement(NotFoundPage,null));}function mapStateToProps(_ref){var authedUser=_ref.authedUser,users=_ref.users,questions=_ref.questions;return{authedUser:authedUser,users:users,questions:questions};}export default connect(mapStateToProps)(PollDetails);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/HomePage/PollDetails.js"],"names":["React","connect","ResultsCard","QuestionCard","NotFoundPage","PollDetails","props","params","match","question_id","authedUser","users","questions","Object","keys","answers","includes","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CAEA;;;GAIA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,IAEfC,CAAAA,MAFe,CAGtBD,KAHsB,CAExBE,KAFwB,CAEfD,MAFe,IAIlBE,CAAAA,WAJkB,CAIFF,MAJE,CAIlBE,WAJkB,IAKlBC,CAAAA,UALkB,CAKeJ,KALf,CAKlBI,UALkB,CAKNC,KALM,CAKeL,KALf,CAKNK,KALM,CAKCC,SALD,CAKeN,KALf,CAKCM,SALD,CAO1B,mBACE,+BACGA,SAAS,CAACH,WAAD,CAAT,cACC,+BACGI,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACD,UAAD,CAAL,CAAkBK,OAA9B,EAAuCC,QAAvC,CAAgDP,WAAhD,eACC,oBAAC,WAAD,EAAa,WAAW,CAAEA,WAA1B,EADD,cAGC,oBAAC,YAAD,EAAc,WAAW,CAAEA,WAA3B,EAJJ,CADD,cASC,oBAAC,YAAD,MAVJ,CADF,CAeD,CAQD,QAASQ,CAAAA,eAAT,MAA2D,IAAhCP,CAAAA,UAAgC,MAAhCA,UAAgC,CAApBC,KAAoB,MAApBA,KAAoB,CAAbC,SAAa,MAAbA,SAAa,CACzD,MAAO,CACLF,UAAU,CAAVA,UADK,CAELC,KAAK,CAALA,KAFK,CAGLC,SAAS,CAATA,SAHK,CAAP,CAKD,CAED,cAAeX,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ResultsCard from './ResultsCard';\nimport QuestionCard from './QuestionCard';\nimport NotFoundPage from '../NotFoundPage';\n\n/**\n * Functional component representing poll details component.\n * @param Refer to PropTypes\n */\nfunction PollDetails(props) {\n  const {\n    match: { params },\n  } = props;\n  const { question_id } = params;\n  const { authedUser, users, questions } = props;\n\n  return (\n    <div>\n      {questions[question_id] ? (\n        <div>\n          {Object.keys(users[authedUser].answers).includes(question_id) ? (\n            <ResultsCard question_id={question_id} />\n          ) : (\n            <QuestionCard question_id={question_id} />\n          )}\n        </div>\n      ) : (\n        <NotFoundPage />\n      )}\n    </div>\n  );\n}\n\nPollDetails.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  users: PropTypes.object.isRequired,\n  questions: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ authedUser, users, questions }) {\n  return {\n    authedUser,\n    users,\n    questions,\n  };\n}\n\nexport default connect(mapStateToProps)(PollDetails);\n"]},"metadata":{},"sourceType":"module"}