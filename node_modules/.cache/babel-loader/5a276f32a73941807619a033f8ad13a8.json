{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import'../../styles/ResultsCard.css';import TeaserAvatar from'./TeaserAvatar';/**\n * Function representing ResultsCard component showing the number of votes for each option.\n * @param Refer to PropTypes below.\n */function ResultsCard(props){var name=props.name,avatarURL=props.avatarURL,optionOneText=props.optionOneText,optionOneVotesNumber=props.optionOneVotesNumber,optionTwoText=props.optionTwoText,optionTwoVotesNumber=props.optionTwoVotesNumber,votedOption=props.votedOption;var totalVotes=optionOneVotesNumber+optionTwoVotesNumber;var optionOnePercent=Math.round(optionOneVotesNumber/totalVotes*100);var optionTwoPercent=Math.round(optionTwoVotesNumber/totalVotes*100);return/*#__PURE__*/React.createElement(\"div\",{className:\"results-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"results-column results-left\"},/*#__PURE__*/React.createElement(TeaserAvatar,{author:name,avatarURL:avatarURL})),/*#__PURE__*/React.createElement(\"div\",{className:\"results-column results-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"results-card-title\"},\"Results\"),/*#__PURE__*/React.createElement(\"div\",{className:\"option-one-result-container\",style:votedOption==='optionOne'?{background:'#3473df'}:{background:'#30444e'}},votedOption==='optionOne'&&/*#__PURE__*/React.createElement(\"div\",{className:\"badge\"},\"Your Vote\"),/*#__PURE__*/React.createElement(\"p\",{className:\"answer-text\"},optionOneText),/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar\",style:{width:\"\".concat(optionOnePercent,\"%\")}})),/*#__PURE__*/React.createElement(\"div\",{className:\"vote-count-container\"},/*#__PURE__*/React.createElement(\"p\",{className:\"votes-count\"},optionOneVotesNumber,\" out of \",totalVotes,\" votes\"),/*#__PURE__*/React.createElement(\"p\",{className:\"percentage\"},optionOnePercent,\"%\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"option-two-result-container\",style:votedOption==='optionTwo'?{background:'#3473df'}:{background:'#30444e'}},votedOption==='optionTwo'&&/*#__PURE__*/React.createElement(\"div\",{className:\"badge\"},\"Your Vote\"),/*#__PURE__*/React.createElement(\"p\",{className:\"answer-text\"},optionTwoText),/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar\",style:{width:\"\".concat(optionTwoPercent,\"%\")}})),/*#__PURE__*/React.createElement(\"div\",{className:\"vote-count-container\"},/*#__PURE__*/React.createElement(\"p\",{className:\"votes-count\"},optionTwoVotesNumber,\" out of \",totalVotes,\" votes\"),/*#__PURE__*/React.createElement(\"p\",{className:\"percentage\"},optionTwoPercent,\"%\")))));}function mapStateToProps(_ref,ownProps){var questions=_ref.questions,users=_ref.users,authedUser=_ref.authedUser;var question_id=ownProps.question_id;var author=questions[question_id].author;var _users$author=users[author],name=_users$author.name,avatarURL=_users$author.avatarURL;var optionOneText=questions[question_id].optionOne.text;var optionOneVotesNumber=questions[question_id].optionOne.votes.length;var optionTwoText=questions[question_id].optionTwo.text;var optionTwoVotesNumber=questions[question_id].optionTwo.votes.length;var votedOption=users[authedUser].answers[question_id];return{name:name,avatarURL:avatarURL,optionOneText:optionOneText,optionOneVotesNumber:optionOneVotesNumber,optionTwoText:optionTwoText,optionTwoVotesNumber:optionTwoVotesNumber,votedOption:votedOption};}export default connect(mapStateToProps)(ResultsCard);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/HomePage/ResultsCard.js"],"names":["React","connect","TeaserAvatar","ResultsCard","props","name","avatarURL","optionOneText","optionOneVotesNumber","optionTwoText","optionTwoVotesNumber","votedOption","totalVotes","optionOnePercent","Math","round","optionTwoPercent","background","width","mapStateToProps","ownProps","questions","users","authedUser","question_id","author","optionOne","text","votes","length","optionTwo","answers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/ResultsCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Function representing ResultsCard component showing the number of votes for each option.\n * @param Refer to PropTypes below.\n */\nfunction ResultsCard(props) {\n  const {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption,\n  } = props;\n  const totalVotes = optionOneVotesNumber + optionTwoVotesNumber;\n  const optionOnePercent = Math.round(\n    (optionOneVotesNumber / totalVotes) * 100\n  );\n  const optionTwoPercent = Math.round(\n    (optionTwoVotesNumber / totalVotes) * 100\n  );\n\n  return (\n    <div className='results-row'>\n      <div className='results-column results-left'>\n        <TeaserAvatar author={name} avatarURL={avatarURL} />\n      </div>\n      <div className='results-column results-right'>\n        <div className='results-card-title'>Results</div>\n        <div\n          className='option-one-result-container'\n          style={\n            votedOption === 'optionOne'\n              ? { background: '#3473df' }\n              : { background: '#30444e' }\n          }\n        >\n          {votedOption === 'optionOne' && (\n            <div className='badge'>Your Vote</div>\n          )}\n          <p className='answer-text'>{optionOneText}</p>\n          <div className='progress-bar-container'>\n            <div\n              className='progress-bar'\n              style={{ width: `${optionOnePercent}%` }}\n            ></div>\n          </div>\n          <div className='vote-count-container'>\n            <p className='votes-count'>\n              {optionOneVotesNumber} out of {totalVotes} votes\n            </p>\n            <p className='percentage'>{optionOnePercent}%</p>\n          </div>\n        </div>\n        <div\n          className='option-two-result-container'\n          style={\n            votedOption === 'optionTwo'\n              ? { background: '#3473df' }\n              : { background: '#30444e' }\n          }\n        >\n          {votedOption === 'optionTwo' && (\n            <div className='badge'>Your Vote</div>\n          )}\n          <p className='answer-text'>{optionTwoText}</p>\n\n          <div className='progress-bar-container'>\n            <div\n              className='progress-bar'\n              style={{ width: `${optionTwoPercent}%` }}\n            ></div>\n          </div>\n          <div className='vote-count-container'>\n            <p className='votes-count'>\n              {optionTwoVotesNumber} out of {totalVotes} votes\n            </p>\n            <p className='percentage'>{optionTwoPercent}%</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nResultsCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionOneVotesNumber: PropTypes.number,\n  optionTwoText: PropTypes.string.isRequired,\n  optionTwoVotesNumber: PropTypes.number,\n  votedOption: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ questions, users, authedUser }, ownProps) {\n  const { question_id } = ownProps;\n  const { author } = questions[question_id];\n  const { name, avatarURL } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionOneVotesNumber = questions[question_id].optionOne.votes.length;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  const optionTwoVotesNumber = questions[question_id].optionTwo.votes.length;\n  const votedOption = users[authedUser].answers[question_id];\n  return {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption,\n  };\n}\n\nexport default connect(mapStateToProps)(ResultsCard);\n"]},"metadata":{},"sourceType":"module"}