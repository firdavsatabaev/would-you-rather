{"ast":null,"code":"var _jsxFileName = \"/home/firdavs/Desktop/would-you-rather-redux-app/src/components/HomePage/ResultsCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/ResultsCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n/**\n * Function representing ResultsCard component showing the number of votes for each option.\n * @param Refer to PropTypes below.\n */\n\nfunction ResultsCard(props) {\n  const {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption\n  } = props;\n  const totalVotes = optionOneVotesNumber + optionTwoVotesNumber;\n  const optionOnePercent = Math.round(optionOneVotesNumber / totalVotes * 100);\n  const optionTwoPercent = Math.round(optionTwoVotesNumber / totalVotes * 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-column results-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TeaserAvatar, {\n    author: name,\n    avatarURL: avatarURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-column results-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Results\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-one-result-container\",\n    style: votedOption === 'optionOne' ? {\n      background: '#3473df'\n    } : {\n      background: '#30444e'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, votedOption === 'optionOne' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Your Vote\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"answer-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, optionOneText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      width: `${optionOnePercent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote-count-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"votes-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, optionOneVotesNumber, \" out of \", totalVotes, \" votes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, optionOnePercent, \"%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-two-result-container\",\n    style: votedOption === 'optionTwo' ? {\n      background: '#3473df'\n    } : {\n      background: '#30444e'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, votedOption === 'optionTwo' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Your Vote\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"answer-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, optionTwoText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      width: `${optionTwoPercent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote-count-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"votes-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, optionTwoVotesNumber, \" out of \", totalVotes, \" votes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, optionTwoPercent, \"%\")))));\n}\n\nResultsCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionOneVotesNumber: PropTypes.number,\n  optionTwoText: PropTypes.string.isRequired,\n  optionTwoVotesNumber: PropTypes.number,\n  votedOption: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, ownProps) {\n  const {\n    question_id\n  } = ownProps;\n  const {\n    author\n  } = questions[question_id];\n  const {\n    name,\n    avatarURL\n  } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionOneVotesNumber = questions[question_id].optionOne.votes.length;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  const optionTwoVotesNumber = questions[question_id].optionTwo.votes.length;\n  const votedOption = users[authedUser].answers[question_id];\n  return {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption\n  };\n}\n\nexport default connect(mapStateToProps)(ResultsCard);","map":{"version":3,"sources":["/home/firdavs/Desktop/would-you-rather-redux-app/src/components/HomePage/ResultsCard.js"],"names":["React","PropTypes","connect","TeaserAvatar","ResultsCard","props","name","avatarURL","optionOneText","optionOneVotesNumber","optionTwoText","optionTwoVotesNumber","votedOption","totalVotes","optionOnePercent","Math","round","optionTwoPercent","background","width","propTypes","string","isRequired","number","mapStateToProps","questions","users","authedUser","ownProps","question_id","author","optionOne","text","votes","length","optionTwo","answers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/ResultsCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Function representing ResultsCard component showing the number of votes for each option.\n * @param Refer to PropTypes below.\n */\nfunction ResultsCard(props) {\n  const {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption,\n  } = props;\n  const totalVotes = optionOneVotesNumber + optionTwoVotesNumber;\n  const optionOnePercent = Math.round(\n    (optionOneVotesNumber / totalVotes) * 100\n  );\n  const optionTwoPercent = Math.round(\n    (optionTwoVotesNumber / totalVotes) * 100\n  );\n\n  return (\n    <div className='results-row'>\n      <div className='results-column results-left'>\n        <TeaserAvatar author={name} avatarURL={avatarURL} />\n      </div>\n      <div className='results-column results-right'>\n        <div className='results-card-title'>Results</div>\n        <div\n          className='option-one-result-container'\n          style={\n            votedOption === 'optionOne'\n              ? { background: '#3473df' }\n              : { background: '#30444e' }\n          }\n        >\n          {votedOption === 'optionOne' && (\n            <div className='badge'>Your Vote</div>\n          )}\n          <p className='answer-text'>{optionOneText}</p>\n          <div className='progress-bar-container'>\n            <div\n              className='progress-bar'\n              style={{ width: `${optionOnePercent}%` }}\n            ></div>\n          </div>\n          <div className='vote-count-container'>\n            <p className='votes-count'>\n              {optionOneVotesNumber} out of {totalVotes} votes\n            </p>\n            <p className='percentage'>{optionOnePercent}%</p>\n          </div>\n        </div>\n        <div\n          className='option-two-result-container'\n          style={\n            votedOption === 'optionTwo'\n              ? { background: '#3473df' }\n              : { background: '#30444e' }\n          }\n        >\n          {votedOption === 'optionTwo' && (\n            <div className='badge'>Your Vote</div>\n          )}\n          <p className='answer-text'>{optionTwoText}</p>\n\n          <div className='progress-bar-container'>\n            <div\n              className='progress-bar'\n              style={{ width: `${optionTwoPercent}%` }}\n            ></div>\n          </div>\n          <div className='vote-count-container'>\n            <p className='votes-count'>\n              {optionTwoVotesNumber} out of {totalVotes} votes\n            </p>\n            <p className='percentage'>{optionTwoPercent}%</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nResultsCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionOneVotesNumber: PropTypes.number,\n  optionTwoText: PropTypes.string.isRequired,\n  optionTwoVotesNumber: PropTypes.number,\n  votedOption: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ questions, users, authedUser }, ownProps) {\n  const { question_id } = ownProps;\n  const { author } = questions[question_id];\n  const { name, avatarURL } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionOneVotesNumber = questions[question_id].optionOne.votes.length;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  const optionTwoVotesNumber = questions[question_id].optionTwo.votes.length;\n  const votedOption = users[authedUser].answers[question_id];\n  return {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption,\n  };\n}\n\nexport default connect(mapStateToProps)(ResultsCard);\n"]},"metadata":{},"sourceType":"module"}