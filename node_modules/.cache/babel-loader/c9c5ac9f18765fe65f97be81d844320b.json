{"ast":null,"code":"import { _saveQuestionAnswer, _saveQuestion, _verifyUser, _verifyQuestion, formatQuestion } from '../_DATA';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction saveQuestionAnswer(authedUser, qid, answer) {\n  return {\n    type: SAVE_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer\n  };\n}\n\nexport function handleSaveQuestionAnswer(authedUser, qid, answer, author) {\n  return dispatch => {\n    dispatch(saveQuestionAnswer(authedUser, qid, answer));\n\n    if (_verifyUser(author) && _verifyUser(authedUser) && _verifyQuestion(qid)) {\n      return _saveQuestionAnswer({\n        authedUser,\n        qid,\n        answer\n      });\n    } else {\n      console.log('It looks like the user or the question is not in the backend but still exists in the local storage. So, your answer is stored in local storage. Upon refresh, you might lose it.');\n    }\n  };\n}\n\nfunction addQuestion(formattedQuestion) {\n  return {\n    type: ADD_QUESTION,\n    formattedQuestion\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\n  return dispatch => {\n    dispatch(addQuestion(formatQuestion({\n      optionOneText,\n      optionTwoText,\n      author\n    })));\n\n    if (_verifyUser(author)) {\n      return _saveQuestion({\n        optionOneText,\n        optionTwoText,\n        author\n      });\n    } else {\n      console.log('There was a problem adding question to the backend, probably because the user is not in the backend while persisted in the local storage.');\n    }\n  };\n}","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/actions/questions.js"],"names":["_saveQuestionAnswer","_saveQuestion","_verifyUser","_verifyQuestion","formatQuestion","ADD_QUESTION","RECEIVE_QUESTIONS","SAVE_QUESTION_ANSWER","receiveQuestions","questions","type","saveQuestionAnswer","authedUser","qid","answer","handleSaveQuestionAnswer","author","dispatch","console","log","addQuestion","formattedQuestion","handleAddQuestion","optionOneText","optionTwoText"],"mappings":"AAAA,SACEA,mBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,cALF,QAMO,UANP;AAOA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEJ,iBADD;AAELG,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,kBAAT,CAA4BC,UAA5B,EAAwCC,GAAxC,EAA6CC,MAA7C,EAAqD;AACnD,SAAO;AACLJ,IAAAA,IAAI,EAAEH,oBADD;AAELK,IAAAA,UAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,OAAO,SAASC,wBAAT,CAAkCH,UAAlC,EAA8CC,GAA9C,EAAmDC,MAAnD,EAA2DE,MAA3D,EAAmE;AACxE,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACN,kBAAkB,CAACC,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAnB,CAAR;;AACA,QACEZ,WAAW,CAACc,MAAD,CAAX,IACAd,WAAW,CAACU,UAAD,CADX,IAEAT,eAAe,CAACU,GAAD,CAHjB,EAIE;AACA,aAAOb,mBAAmB,CAAC;AAAEY,QAAAA,UAAF;AAAcC,QAAAA,GAAd;AAAmBC,QAAAA;AAAnB,OAAD,CAA1B;AACD,KAND,MAMO;AACLI,MAAAA,OAAO,CAACC,GAAR,CACE,kLADF;AAGD;AACF,GAbD;AAcD;;AAED,SAASC,WAAT,CAAqBC,iBAArB,EAAwC;AACtC,SAAO;AACLX,IAAAA,IAAI,EAAEL,YADD;AAELgB,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyDR,MAAzD,EAAiE;AACtE,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CACNG,WAAW,CAAChB,cAAc,CAAC;AAAEmB,MAAAA,aAAF;AAAiBC,MAAAA,aAAjB;AAAgCR,MAAAA;AAAhC,KAAD,CAAf,CADL,CAAR;;AAGA,QAAId,WAAW,CAACc,MAAD,CAAf,EAAyB;AACvB,aAAOf,aAAa,CAAC;AAAEsB,QAAAA,aAAF;AAAiBC,QAAAA,aAAjB;AAAgCR,QAAAA;AAAhC,OAAD,CAApB;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CACE,2IADF;AAGD;AACF,GAXD;AAYD","sourcesContent":["import {\n  _saveQuestionAnswer,\n  _saveQuestion,\n  _verifyUser,\n  _verifyQuestion,\n  formatQuestion,\n} from '../_DATA';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER';\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  };\n}\n\nfunction saveQuestionAnswer(authedUser, qid, answer) {\n  return {\n    type: SAVE_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer,\n  };\n}\n\nexport function handleSaveQuestionAnswer(authedUser, qid, answer, author) {\n  return dispatch => {\n    dispatch(saveQuestionAnswer(authedUser, qid, answer));\n    if (\n      _verifyUser(author) &&\n      _verifyUser(authedUser) &&\n      _verifyQuestion(qid)\n    ) {\n      return _saveQuestionAnswer({ authedUser, qid, answer });\n    } else {\n      console.log(\n        'It looks like the user or the question is not in the backend but still exists in the local storage. So, your answer is stored in local storage. Upon refresh, you might lose it.'\n      );\n    }\n  };\n}\n\nfunction addQuestion(formattedQuestion) {\n  return {\n    type: ADD_QUESTION,\n    formattedQuestion,\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\n  return dispatch => {\n    dispatch(\n      addQuestion(formatQuestion({ optionOneText, optionTwoText, author }))\n    );\n    if (_verifyUser(author)) {\n      return _saveQuestion({ optionOneText, optionTwoText, author });\n    } else {\n      console.log(\n        'There was a problem adding question to the backend, probably because the user is not in the backend while persisted in the local storage.'\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}