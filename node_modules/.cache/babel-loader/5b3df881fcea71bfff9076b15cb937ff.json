{"ast":null,"code":"var _jsxFileName = \"/home/firdavs/would-you-rather/src/components/LandingPage/SignUpPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SignInputBox from './SignInputBox';\nimport '../../styles/SignUpPage.css';\nimport { handleAddUser } from '../../actions/users';\nimport avatar1 from \"../../assets/avatars/avatar1.svg\";\nimport avatar2 from \"../../assets/avatars/avatar2.svg\";\nimport avatar3 from \"../../assets/avatars/avatar3.svg\";\nimport avatar4 from \"../../assets/avatars/avatar4.svg\";\nimport avatar5 from \"../../assets/avatars/avatar5.svg\";\n/**\n * Class component representing the Sign up page.\n * @extends Component\n */\n\nclass SignUpPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      username: '',\n      password: '',\n      repeatPassword: '',\n      nonMatchingPasswords: false,\n      usernameTaken: false,\n      successfulAccount: false,\n      anyBlankField: false\n    };\n\n    this.pickRandomAvatar = () => {\n      // Credits: avataaars.io\n      const avatarNames = [avatar1, avatar2, avatar3, avatar4, avatar5];\n      return avatarNames[Math.floor(Math.random() * avatarNames.length)];\n    };\n\n    this.handleInput = (inputType, inputValue) => {\n      switch (inputType) {\n        case 'name':\n          this.setState({\n            name: inputValue\n          });\n          break;\n\n        case 'username':\n          this.setState({\n            username: inputValue\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: inputValue\n          });\n          break;\n\n        case 'repeatPassword':\n          this.setState({\n            repeatPassword: inputValue\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        username,\n        password,\n        repeatPassword\n      } = this.state;\n      const {\n        users\n      } = this.props;\n\n      if (!name || !username || !password || !repeatPassword) {\n        this.setState({\n          anyBlankField: true,\n          nonMatchingPasswords: false,\n          usernameTaken: false,\n          successfulAccount: false,\n          name: '',\n          username: '',\n          password: '',\n          repeatPassword: ''\n        });\n      } else if (password !== repeatPassword) {\n        this.setState({\n          nonMatchingPasswords: true,\n          anyBlankField: false,\n          usernameTaken: false,\n          successfulAccount: false,\n          name: '',\n          username: '',\n          password: '',\n          repeatPassword: ''\n        });\n      } else {\n        if (username in users) {\n          this.setState({\n            usernameTaken: true,\n            nonMatchingPasswords: false,\n            successfulAccount: false,\n            anyBlankField: false,\n            name: '',\n            username: '',\n            password: '',\n            repeatPassword: ''\n          });\n        } else {\n          this.setState({\n            successfulAccount: true,\n            usernameTaken: false,\n            nonMatchingPasswords: false,\n            anyBlankField: false,\n            name: '',\n            username: '',\n            password: '',\n            repeatPassword: ''\n          });\n          const randomAvatarURL = this.pickRandomAvatar();\n          this.props.dispatch(handleAddUser(name, username, password, randomAvatarURL));\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      username,\n      password,\n      repeatPassword,\n      nonMatchingPasswords,\n      usernameTaken,\n      successfulAccount,\n      anyBlankField\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInputBox, {\n      label: \"Name:\",\n      inputName: \"name\",\n      onChange: this.handleInput,\n      value: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInputBox, {\n      label: \"Username:\",\n      inputName: \"username\",\n      onChange: this.handleInput,\n      value: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInputBox, {\n      label: \"Password:\",\n      inputName: \"password\",\n      onChange: this.handleInput,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repeat-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInputBox, {\n      label: \"Repeat Password:\",\n      inputName: \"repeatPassword\",\n      onChange: this.handleInput,\n      value: repeatPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signup-signup-button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, \"SIGN UP\")), nonMatchingPasswords && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-creation-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"The passwords did not match. Please try again!\"), usernameTaken && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-creation-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"The username is already taken. Please try another username!\"), successfulAccount && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-creation-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Account was created successfully. \\xA0\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      style: {\n        textDecoration: 'none',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, \"Please click here to log in!\")), anyBlankField && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-creation-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, \"You cannot leave any field blank. Please try again!\"));\n  }\n\n}\n\nSignUpPage.propTypes = {\n  users: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps({\n  users\n}) {\n  return {\n    users\n  };\n}\n\nexport default connect(mapStateToProps)(SignUpPage);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/LandingPage/SignUpPage.js"],"names":["React","Component","PropTypes","connect","Link","SignInputBox","handleAddUser","SignUpPage","state","name","username","password","repeatPassword","nonMatchingPasswords","usernameTaken","successfulAccount","anyBlankField","pickRandomAvatar","avatarNames","avatar1","avatar2","avatar3","avatar4","avatar5","Math","floor","random","length","handleInput","inputType","inputValue","setState","handleSubmit","e","preventDefault","users","props","randomAvatarURL","dispatch","render","textDecoration","color","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SignInputBox from './SignInputBox';\nimport '../../styles/SignUpPage.css';\nimport { handleAddUser } from '../../actions/users';\nimport avatar1 from '../../assets/avatars/avatar1.svg';\nimport avatar2 from '../../assets/avatars/avatar2.svg';\nimport avatar3 from '../../assets/avatars/avatar3.svg';\nimport avatar4 from '../../assets/avatars/avatar4.svg';\nimport avatar5 from '../../assets/avatars/avatar5.svg';\n\n/**\n * Class component representing the Sign up page.\n * @extends Component\n */\nclass SignUpPage extends Component {\n  state = {\n    name: '',\n    username: '',\n    password: '',\n    repeatPassword: '',\n    nonMatchingPasswords: false,\n    usernameTaken: false,\n    successfulAccount: false,\n    anyBlankField: false,\n  };\n\n  pickRandomAvatar = () => {\n    // Credits: avataaars.io\n    const avatarNames = [avatar1, avatar2, avatar3, avatar4, avatar5];\n    return avatarNames[Math.floor(Math.random() * avatarNames.length)];\n  };\n\n  handleInput = (inputType, inputValue) => {\n    switch (inputType) {\n      case 'name':\n        this.setState({\n          name: inputValue,\n        });\n        break;\n      case 'username':\n        this.setState({\n          username: inputValue,\n        });\n        break;\n      case 'password':\n        this.setState({\n          password: inputValue,\n        });\n        break;\n      case 'repeatPassword':\n        this.setState({\n          repeatPassword: inputValue,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, username, password, repeatPassword } = this.state;\n    const { users } = this.props;\n    if (!name || !username || !password || !repeatPassword) {\n      this.setState({\n        anyBlankField: true,\n        nonMatchingPasswords: false,\n        usernameTaken: false,\n        successfulAccount: false,\n        name: '',\n        username: '',\n        password: '',\n        repeatPassword: '',\n      });\n    } else if (password !== repeatPassword) {\n      this.setState({\n        nonMatchingPasswords: true,\n        anyBlankField: false,\n        usernameTaken: false,\n        successfulAccount: false,\n        name: '',\n        username: '',\n        password: '',\n        repeatPassword: '',\n      });\n    } else {\n      if (username in users) {\n        this.setState({\n          usernameTaken: true,\n          nonMatchingPasswords: false,\n          successfulAccount: false,\n          anyBlankField: false,\n          name: '',\n          username: '',\n          password: '',\n          repeatPassword: '',\n        });\n      } else {\n        this.setState({\n          successfulAccount: true,\n          usernameTaken: false,\n          nonMatchingPasswords: false,\n          anyBlankField: false,\n          name: '',\n          username: '',\n          password: '',\n          repeatPassword: '',\n        });\n        const randomAvatarURL = this.pickRandomAvatar();\n        this.props.dispatch(\n          handleAddUser(name, username, password, randomAvatarURL)\n        );\n      }\n    }\n  };\n\n  render() {\n    const {\n      name,\n      username,\n      password,\n      repeatPassword,\n      nonMatchingPasswords,\n      usernameTaken,\n      successfulAccount,\n      anyBlankField,\n    } = this.state;\n    return (\n      <div className='signup-form-box'>\n        <div className='name-input'>\n          <SignInputBox\n            label='Name:'\n            inputName='name'\n            onChange={this.handleInput}\n            value={name}\n          />\n        </div>\n        <div className='username-input'>\n          <SignInputBox\n            label='Username:'\n            inputName='username'\n            onChange={this.handleInput}\n            value={username}\n          />\n        </div>\n        <div className='password-input'>\n          <SignInputBox\n            label='Password:'\n            inputName='password'\n            onChange={this.handleInput}\n            value={password}\n          />\n        </div>\n        <div className='repeat-password-input'>\n          <SignInputBox\n            label='Repeat Password:'\n            inputName='repeatPassword'\n            onChange={this.handleInput}\n            value={repeatPassword}\n          />\n        </div>\n        <div>\n          <button className='signup-signup-button' onClick={this.handleSubmit}>\n            SIGN UP\n          </button>\n        </div>\n        {nonMatchingPasswords && (\n          <p className='account-creation-message'>\n            The passwords did not match. Please try again!\n          </p>\n        )}\n        {usernameTaken && (\n          <p className='account-creation-message'>\n            The username is already taken. Please try another username!\n          </p>\n        )}\n        {successfulAccount && (\n          <p className='account-creation-message'>\n            Account was created successfully. &nbsp;\n            <Link\n              to='/signin'\n              style={{ textDecoration: 'none', color: 'white' }}\n            >\n              Please click here to log in!\n            </Link>\n          </p>\n        )}\n        {anyBlankField && (\n          <p className='account-creation-message'>\n            You cannot leave any field blank. Please try again!\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nSignUpPage.propTypes = {\n  users: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(SignUpPage);\n"]},"metadata":{},"sourceType":"module"}