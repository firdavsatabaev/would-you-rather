{"ast":null,"code":"var _jsxFileName = \"/home/firdavs/would-you-rather/src/components/LandingPage/SignInPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport { setCurrentTab } from '../../actions/currentTab';\nimport SignInputBox from './SignInputBox';\nimport '../../styles/SignInPage.css';\n/**\n * Class component representing the sign in page.\n * @extends Component\n */\n\nclass SignInPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      incorrectCredentials: false,\n      anyBlankField: false\n    };\n\n    this.handleInput = (inputType, inputValue) => {\n      switch (inputType) {\n        case 'username':\n          this.setState({\n            username: inputValue\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: inputValue\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      const {\n        param,\n        param2\n      } = params;\n      const {\n        username,\n        password\n      } = this.state;\n      const {\n        users\n      } = this.props;\n\n      if (!username || !password) {\n        this.setState({\n          anyBlankField: true,\n          incorrectCredentials: false,\n          username: '',\n          password: ''\n        });\n      } else {\n        if (users[username]) {\n          const recordedPassword = users[username].password;\n\n          if (recordedPassword === password) {\n            // Log in successfully by routing to the next page\n            this.props.dispatch(setAuthedUser(username));\n\n            switch (param) {\n              case 'signin':\n              case 'questions':\n                this.props.dispatch(setCurrentTab('home'));\n                break;\n\n              case 'add':\n                this.props.dispatch(setCurrentTab('newQuestion'));\n                break;\n\n              case 'leaderboard':\n                this.props.dispatch(setCurrentTab('leaderboard'));\n                break;\n\n              default:\n                this.props.dispatch(setCurrentTab('home'));\n                break;\n            }\n\n            if (param === 'signin') {\n              this.props.history.push('/questions');\n            } else {\n              if (param2 !== undefined) {\n                this.props.history.push(`/${param}/${param2}`);\n              } else {\n                this.props.history.push(`/${param}`);\n              }\n            }\n          } else {\n            this.setState({\n              anyBlankField: false,\n              incorrectCredentials: true,\n              username: '',\n              password: ''\n            });\n          }\n        } else {\n          this.setState({\n            anyBlankField: false,\n            incorrectCredentials: true,\n            username: '',\n            password: ''\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      anyBlankField,\n      incorrectCredentials\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin-form-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInputBox, {\n      label: \"Username:\",\n      inputName: \"username\",\n      onChange: this.handleInput,\n      value: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInputBox, {\n      label: \"Password:\",\n      inputName: \"password\",\n      onChange: this.handleInput,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signin-signin-button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"SIGN IN\")), anyBlankField && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-creation-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"You cannot leave any field blank. Please try again!\"), incorrectCredentials && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-creation-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Either the username or password is incorrect. Please try again!\"));\n  }\n\n}\n\nSignInPage.propTypes = {\n  users: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps({\n  users\n}) {\n  return {\n    users\n  };\n}\n\nexport default connect(mapStateToProps)(SignInPage);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/LandingPage/SignInPage.js"],"names":["React","Component","PropTypes","connect","setAuthedUser","setCurrentTab","SignInputBox","SignInPage","state","username","password","incorrectCredentials","anyBlankField","handleInput","inputType","inputValue","setState","handleSubmit","e","preventDefault","match","params","props","param","param2","users","recordedPassword","dispatch","history","push","undefined","render","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport { setCurrentTab } from '../../actions/currentTab';\nimport SignInputBox from './SignInputBox';\nimport '../../styles/SignInPage.css';\n\n/**\n * Class component representing the sign in page.\n * @extends Component\n */\nclass SignInPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    incorrectCredentials: false,\n    anyBlankField: false,\n  };\n\n  handleInput = (inputType, inputValue) => {\n    switch (inputType) {\n      case 'username':\n        this.setState({\n          username: inputValue,\n        });\n        break;\n      case 'password':\n        this.setState({\n          password: inputValue,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      match: { params },\n    } = this.props;\n    const { param, param2 } = params;\n    const { username, password } = this.state;\n    const { users } = this.props;\n    \n    if (!username || !password) {\n      this.setState({\n        anyBlankField: true,\n        incorrectCredentials: false,\n        username: '',\n        password: '',\n      });\n    } else {\n      if (users[username]) {\n        const recordedPassword = users[username].password;\n        if (recordedPassword === password) {\n          // Log in successfully by routing to the next page\n          this.props.dispatch(setAuthedUser(username));\n          switch (param) {\n            case 'signin':\n            case 'questions':\n              this.props.dispatch(setCurrentTab('home'));\n              break;\n            case 'add':\n              this.props.dispatch(setCurrentTab('newQuestion'));\n              break;\n            case 'leaderboard':\n              this.props.dispatch(setCurrentTab('leaderboard'));\n              break;\n            default:\n              this.props.dispatch(setCurrentTab('home'));\n              break;\n          }\n\n          if (param === 'signin') {\n            this.props.history.push('/questions');\n          } else {\n            if (param2 !== undefined) {\n              this.props.history.push(`/${param}/${param2}`);\n            } else {\n              this.props.history.push(`/${param}`);\n            }\n          }\n        } else {\n          this.setState({\n            anyBlankField: false,\n            incorrectCredentials: true,\n            username: '',\n            password: '',\n          });\n        }\n      } else {\n        this.setState({\n          anyBlankField: false,\n          incorrectCredentials: true,\n          username: '',\n          password: '',\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      username,\n      password,\n      anyBlankField,\n      incorrectCredentials,\n    } = this.state;\n    return (\n      <div className='signin-form-box'>\n        <div className='username-input'>\n          <SignInputBox\n            label='Username:'\n            inputName='username'\n            onChange={this.handleInput}\n            value={username}\n          />\n        </div>\n        <div className='password-input'>\n          <SignInputBox\n            label='Password:'\n            inputName='password'\n            onChange={this.handleInput}\n            value={password}\n          />\n        </div>\n        <div>\n          <button className='signin-signin-button' onClick={this.handleSubmit}>\n            SIGN IN\n          </button>\n        </div>\n        {anyBlankField && (\n          <p className='account-creation-message'>\n            You cannot leave any field blank. Please try again!\n          </p>\n        )}\n        {incorrectCredentials && (\n          <p className='account-creation-message'>\n            Either the username or password is incorrect. Please try again!\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nSignInPage.propTypes = {\n  users: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(SignInPage);\n"]},"metadata":{},"sourceType":"module"}