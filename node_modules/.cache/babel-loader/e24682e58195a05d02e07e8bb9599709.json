{"ast":null,"code":"var _jsxFileName = \"/home/firdavs/Desktop/would-you-rather-redux-app/src/components/HomePage/QuestionCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { handleSaveQuestionAnswer } from '../../actions/questions';\nimport '../../styles/QuestionCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n/**\n * Class representing QuestionCard component shown on homepage.\n * @extends Component\n */\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      vote: ''\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        authedUser,\n        question_id,\n        author\n      } = this.props;\n      const {\n        vote\n      } = this.state;\n\n      if (vote === '') {\n        alert('You cannot leave it blank. Please choose one option!');\n      } else {\n        this.props.dispatch(handleSaveQuestionAnswer(authedUser, question_id, vote, author));\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      avatarURL,\n      optionOneText,\n      optionTwoText\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qcard-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qcard-column qcard-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TeaserAvatar, {\n      author: name,\n      avatarURL: avatarURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qcard-column qcard-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qcard-card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Would You Rather\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"optionOne\",\n      name: \"options\",\n      value: \"optionOne\",\n      onChange: () => this.setState({\n        vote: 'optionOne'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), optionOneText), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"optionTwo\",\n      name: \"options\",\n      value: \"optionTwo\",\n      onChange: () => this.setState({\n        vote: 'optionTwo'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), optionTwoText), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qcard-btn-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"qcard-submit-btn\",\n      onClick: this.handleSubmit,\n      disabled: this.state.vote === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"SUBMIT\"))));\n  }\n\n}\n\nQuestionCard.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  question_id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionTwoText: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps({\n  users,\n  questions,\n  authedUser\n}, ownProps) {\n  const {\n    question_id\n  } = ownProps;\n  const {\n    author\n  } = questions[question_id];\n  const {\n    name,\n    avatarURL\n  } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  return {\n    authedUser,\n    question_id,\n    author,\n    name,\n    avatarURL,\n    optionOneText,\n    optionTwoText\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["/home/firdavs/Desktop/would-you-rather-redux-app/src/components/HomePage/QuestionCard.js"],"names":["React","Component","PropTypes","connect","handleSaveQuestionAnswer","TeaserAvatar","QuestionCard","state","vote","handleSubmit","e","preventDefault","authedUser","question_id","author","props","alert","dispatch","render","name","avatarURL","optionOneText","optionTwoText","setState","propTypes","string","isRequired","mapStateToProps","users","questions","ownProps","optionOne","text","optionTwo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { handleSaveQuestionAnswer } from '../../actions/questions';\nimport '../../styles/QuestionCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Class representing QuestionCard component shown on homepage.\n * @extends Component\n */\nclass QuestionCard extends Component {\n  state = {\n    vote: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { authedUser, question_id, author } = this.props;\n    const { vote } = this.state;\n    if (vote === '') {\n      alert('You cannot leave it blank. Please choose one option!');\n    } else {\n      this.props.dispatch(\n        handleSaveQuestionAnswer(authedUser, question_id, vote, author)\n      );\n    }\n  };\n\n  render() {\n    const { name, avatarURL, optionOneText, optionTwoText } = this.props;\n\n    return (\n      <div className='qcard-row'>\n        <div className='qcard-column qcard-left'>\n          <TeaserAvatar author={name} avatarURL={avatarURL} />\n        </div>\n        <div className='qcard-column qcard-right'>\n          <div className='qcard-card-title'>Would You Rather</div>\n          <div>\n            <input\n              type='radio'\n              id='optionOne'\n              name='options'\n              value='optionOne'\n              onChange={() => this.setState({ vote: 'optionOne' })}\n            ></input>\n            {optionOneText}\n          </div>\n          <div>\n            <input\n              type='radio'\n              id='optionTwo'\n              name='options'\n              value='optionTwo'\n              onChange={() => this.setState({ vote: 'optionTwo' })}\n            ></input>\n            {optionTwoText}\n          </div>\n          <div className='qcard-btn-container'>\n            <button\n              className='qcard-submit-btn'\n              onClick={this.handleSubmit}\n              disabled={this.state.vote === ''}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuestionCard.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  question_id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionTwoText: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ users, questions, authedUser }, ownProps) {\n  const { question_id } = ownProps;\n  const { author } = questions[question_id];\n  const { name, avatarURL } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  return {\n    authedUser,\n    question_id,\n    author,\n    name,\n    avatarURL,\n    optionOneText,\n    optionTwoText,\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);\n"]},"metadata":{},"sourceType":"module"}