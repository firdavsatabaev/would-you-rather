{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import LeaderCard from'./LeaderCard';import'../../styles/LeaderCards.css';/**\n * Functional component representing the cards on LeaderBoard page.\n * @param Refer to PropTypes below.\n */function LeaderCards(props){var organizeLeaders=function organizeLeaders(){var users=props.users;var organizedUsersList=[];var usersList=Object.keys(users);usersList.forEach(function(user){var userInfo=users[user];var name=userInfo.name,avatarURL=userInfo.avatarURL;var answersNumber=Object.keys(userInfo.answers).length;var questionsNumber=userInfo.questions.length;var score=answersNumber+questionsNumber;organizedUsersList.push({name:name,avatarURL:avatarURL,answersNumber:answersNumber,questionsNumber:questionsNumber,score:score});});organizedUsersList.sort(function(a,b){return b.score-a.score;});return organizedUsersList;};var organizedUsersList=organizeLeaders();return/*#__PURE__*/React.createElement(\"div\",{className:\"leadercards-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leadercard-container\"},organizedUsersList.map(function(user,index){return/*#__PURE__*/React.createElement(LeaderCard,{name:user.name,avatarURL:user.avatarURL,answersNumber:user.answersNumber,questionsNumber:user.questionsNumber,score:user.score,key:index});})));}function mapStateToProps(_ref){var users=_ref.users;return{users:users};}export default connect(mapStateToProps)(LeaderCards);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/Leaderboard/LeaderCards.js"],"names":["React","connect","LeaderCard","LeaderCards","props","organizeLeaders","users","organizedUsersList","usersList","Object","keys","forEach","user","userInfo","name","avatarURL","answersNumber","answers","length","questionsNumber","questions","score","push","sort","a","b","map","index","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAO,8BAAP,CAEA;;;GAIA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAC1B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,IACpBC,CAAAA,KADoB,CACVF,KADU,CACpBE,KADoB,CAE5B,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAMC,CAAAA,SAAS,CAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAlB,CACAE,SAAS,CAACG,OAAV,CAAkB,SAAAC,IAAI,CAAI,CACxB,GAAIC,CAAAA,QAAQ,CAAGP,KAAK,CAACM,IAAD,CAApB,CADwB,GAEhBE,CAAAA,IAFgB,CAEID,QAFJ,CAEhBC,IAFgB,CAEVC,SAFU,CAEIF,QAFJ,CAEVE,SAFU,CAGxB,GAAMC,CAAAA,aAAa,CAAGP,MAAM,CAACC,IAAP,CAAYG,QAAQ,CAACI,OAArB,EAA8BC,MAApD,CACA,GAAMC,CAAAA,eAAe,CAAGN,QAAQ,CAACO,SAAT,CAAmBF,MAA3C,CACA,GAAMG,CAAAA,KAAK,CAAGL,aAAa,CAAGG,eAA9B,CACAZ,kBAAkB,CAACe,IAAnB,CAAwB,CACtBR,IAAI,CAAJA,IADsB,CAEtBC,SAAS,CAATA,SAFsB,CAGtBC,aAAa,CAAbA,aAHsB,CAItBG,eAAe,CAAfA,eAJsB,CAKtBE,KAAK,CAALA,KALsB,CAAxB,EAOD,CAbD,EAcAd,kBAAkB,CAACgB,IAAnB,CAAwB,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACJ,KAAF,CAAUG,CAAC,CAACH,KAAtB,EAAxB,EACA,MAAOd,CAAAA,kBAAP,CACD,CApBD,CAsBA,GAAMA,CAAAA,kBAAkB,CAAGF,eAAe,EAA1C,CAEA,mBACE,2BAAK,SAAS,CAAC,uBAAf,eACE,2BAAK,SAAS,CAAC,sBAAf,EACGE,kBAAkB,CAACmB,GAAnB,CAAuB,SAACd,IAAD,CAAOe,KAAP,qBACtB,oBAAC,UAAD,EACE,IAAI,CAAEf,IAAI,CAACE,IADb,CAEE,SAAS,CAAEF,IAAI,CAACG,SAFlB,CAGE,aAAa,CAAEH,IAAI,CAACI,aAHtB,CAIE,eAAe,CAAEJ,IAAI,CAACO,eAJxB,CAKE,KAAK,CAAEP,IAAI,CAACS,KALd,CAME,GAAG,CAAEM,KANP,EADsB,EAAvB,CADH,CADF,CADF,CAgBD,CAMD,QAASC,CAAAA,eAAT,MAAoC,IAATtB,CAAAA,KAAS,MAATA,KAAS,CAClC,MAAO,CACLA,KAAK,CAALA,KADK,CAAP,CAGD,CAED,cAAeL,CAAAA,OAAO,CAAC2B,eAAD,CAAP,CAAyBzB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LeaderCard from './LeaderCard';\nimport '../../styles/LeaderCards.css';\n\n/**\n * Functional component representing the cards on LeaderBoard page.\n * @param Refer to PropTypes below.\n */\nfunction LeaderCards(props) {\n  const organizeLeaders = () => {\n    const { users } = props;\n    let organizedUsersList = [];\n    const usersList = Object.keys(users);\n    usersList.forEach(user => {\n      let userInfo = users[user];\n      const { name, avatarURL } = userInfo;\n      const answersNumber = Object.keys(userInfo.answers).length;\n      const questionsNumber = userInfo.questions.length;\n      const score = answersNumber + questionsNumber;\n      organizedUsersList.push({\n        name,\n        avatarURL,\n        answersNumber,\n        questionsNumber,\n        score,\n      });\n    });\n    organizedUsersList.sort((a, b) => b.score - a.score);\n    return organizedUsersList;\n  };\n\n  const organizedUsersList = organizeLeaders();\n\n  return (\n    <div className='leadercards-container'>\n      <div className='leadercard-container'>\n        {organizedUsersList.map((user, index) => (\n          <LeaderCard\n            name={user.name}\n            avatarURL={user.avatarURL}\n            answersNumber={user.answersNumber}\n            questionsNumber={user.questionsNumber}\n            score={user.score}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nLeaderCards.propTypes = {\n  users: PropTypes.object,\n};\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderCards);\n"]},"metadata":{},"sourceType":"module"}