{"ast":null,"code":"import _classCallCheck from\"/home/firdavs/would-you-rather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/firdavs/would-you-rather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/firdavs/would-you-rather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/firdavs/would-you-rather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{handleSaveQuestionAnswer}from'../../actions/questions';import'../../styles/QuestionCard.css';import TeaserAvatar from'./TeaserAvatar';/**\n * Class representing QuestionCard component shown on homepage.\n * @extends Component\n */var QuestionCard=/*#__PURE__*/function(_Component){_inherits(QuestionCard,_Component);var _super=_createSuper(QuestionCard);function QuestionCard(){var _this;_classCallCheck(this,QuestionCard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={vote:''};_this.handleSubmit=function(e){e.preventDefault();var _this$props=_this.props,authedUser=_this$props.authedUser,question_id=_this$props.question_id,author=_this$props.author;var vote=_this.state.vote;if(vote===''){alert('You cannot leave it blank. Please choose one option!');}else{_this.props.dispatch(handleSaveQuestionAnswer(authedUser,question_id,vote,author));}};return _this;}_createClass(QuestionCard,[{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,name=_this$props2.name,avatarURL=_this$props2.avatarURL,optionOneText=_this$props2.optionOneText,optionTwoText=_this$props2.optionTwoText;return/*#__PURE__*/React.createElement(\"div\",{className:\"qcard-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"qcard-column qcard-left\"},/*#__PURE__*/React.createElement(TeaserAvatar,{author:name,avatarURL:avatarURL})),/*#__PURE__*/React.createElement(\"div\",{className:\"qcard-column qcard-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"qcard-card-title\"},\"Would You Rather\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",id:\"optionOne\",name:\"options\",value:\"optionOne\",onChange:function onChange(){return _this2.setState({vote:'optionOne'});}}),optionOneText),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",id:\"optionTwo\",name:\"options\",value:\"optionTwo\",onChange:function onChange(){return _this2.setState({vote:'optionTwo'});}}),optionTwoText),/*#__PURE__*/React.createElement(\"div\",{className:\"qcard-btn-container\"},/*#__PURE__*/React.createElement(\"button\",{className:\"qcard-submit-btn\",onClick:this.handleSubmit,disabled:this.state.vote===''},\"SUBMIT\"))));}}]);return QuestionCard;}(Component);function mapStateToProps(_ref,ownProps){var users=_ref.users,questions=_ref.questions,authedUser=_ref.authedUser;var question_id=ownProps.question_id;var author=questions[question_id].author;var _users$author=users[author],name=_users$author.name,avatarURL=_users$author.avatarURL;var optionOneText=questions[question_id].optionOne.text;var optionTwoText=questions[question_id].optionTwo.text;return{authedUser:authedUser,question_id:question_id,author:author,name:name,avatarURL:avatarURL,optionOneText:optionOneText,optionTwoText:optionTwoText};}export default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/HomePage/QuestionCard.js"],"names":["React","Component","connect","handleSaveQuestionAnswer","TeaserAvatar","QuestionCard","state","vote","handleSubmit","e","preventDefault","props","authedUser","question_id","author","alert","dispatch","name","avatarURL","optionOneText","optionTwoText","setState","mapStateToProps","ownProps","users","questions","optionOne","text","optionTwo"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,yBAAzC,CACA,MAAO,+BAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA;;;MAIMC,CAAAA,Y,mVACJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,C,OAIRC,Y,CAAe,SAAAC,CAAC,CAAI,CAClBA,CAAC,CAACC,cAAF,GADkB,gBAE0B,MAAKC,KAF/B,CAEVC,UAFU,aAEVA,UAFU,CAEEC,WAFF,aAEEA,WAFF,CAEeC,MAFf,aAEeA,MAFf,IAGVP,CAAAA,IAHU,CAGD,MAAKD,KAHJ,CAGVC,IAHU,CAIlB,GAAIA,IAAI,GAAK,EAAb,CAAiB,CACfQ,KAAK,CAAC,sDAAD,CAAL,CACD,CAFD,IAEO,CACL,MAAKJ,KAAL,CAAWK,QAAX,CACEb,wBAAwB,CAACS,UAAD,CAAaC,WAAb,CAA0BN,IAA1B,CAAgCO,MAAhC,CAD1B,EAGD,CACF,C,+EAEQ,kCACmD,KAAKH,KADxD,CACCM,IADD,cACCA,IADD,CACOC,SADP,cACOA,SADP,CACkBC,aADlB,cACkBA,aADlB,CACiCC,aADjC,cACiCA,aADjC,CAGP,mBACE,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,yBAAf,eACE,oBAAC,YAAD,EAAc,MAAM,CAAEH,IAAtB,CAA4B,SAAS,CAAEC,SAAvC,EADF,CADF,cAIE,2BAAK,SAAS,CAAC,0BAAf,eACE,2BAAK,SAAS,CAAC,kBAAf,qBADF,cAEE,4CACE,6BACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,WAFL,CAGE,IAAI,CAAC,SAHP,CAIE,KAAK,CAAC,WAJR,CAKE,QAAQ,CAAE,0BAAM,CAAA,MAAI,CAACG,QAAL,CAAc,CAAEd,IAAI,CAAE,WAAR,CAAd,CAAN,EALZ,EADF,CAQGY,aARH,CAFF,cAYE,4CACE,6BACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,WAFL,CAGE,IAAI,CAAC,SAHP,CAIE,KAAK,CAAC,WAJR,CAKE,QAAQ,CAAE,0BAAM,CAAA,MAAI,CAACE,QAAL,CAAc,CAAEd,IAAI,CAAE,WAAR,CAAd,CAAN,EALZ,EADF,CAQGa,aARH,CAZF,cAsBE,2BAAK,SAAS,CAAC,qBAAf,eACE,8BACE,SAAS,CAAC,kBADZ,CAEE,OAAO,CAAE,KAAKZ,YAFhB,CAGE,QAAQ,CAAE,KAAKF,KAAL,CAAWC,IAAX,GAAoB,EAHhC,WADF,CAtBF,CAJF,CADF,CAuCD,C,0BA5DwBN,S,EAyE3B,QAASqB,CAAAA,eAAT,MAA2DC,QAA3D,CAAqE,IAA1CC,CAAAA,KAA0C,MAA1CA,KAA0C,CAAnCC,SAAmC,MAAnCA,SAAmC,CAAxBb,UAAwB,MAAxBA,UAAwB,IAC3DC,CAAAA,WAD2D,CAC3CU,QAD2C,CAC3DV,WAD2D,IAE3DC,CAAAA,MAF2D,CAEhDW,SAAS,CAACZ,WAAD,CAFuC,CAE3DC,MAF2D,mBAGvCU,KAAK,CAACV,MAAD,CAHkC,CAG3DG,IAH2D,eAG3DA,IAH2D,CAGrDC,SAHqD,eAGrDA,SAHqD,CAInE,GAAMC,CAAAA,aAAa,CAAGM,SAAS,CAACZ,WAAD,CAAT,CAAuBa,SAAvB,CAAiCC,IAAvD,CACA,GAAMP,CAAAA,aAAa,CAAGK,SAAS,CAACZ,WAAD,CAAT,CAAuBe,SAAvB,CAAiCD,IAAvD,CACA,MAAO,CACLf,UAAU,CAAVA,UADK,CAELC,WAAW,CAAXA,WAFK,CAGLC,MAAM,CAANA,MAHK,CAILG,IAAI,CAAJA,IAJK,CAKLC,SAAS,CAATA,SALK,CAMLC,aAAa,CAAbA,aANK,CAOLC,aAAa,CAAbA,aAPK,CAAP,CASD,CAED,cAAelB,CAAAA,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { handleSaveQuestionAnswer } from '../../actions/questions';\nimport '../../styles/QuestionCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Class representing QuestionCard component shown on homepage.\n * @extends Component\n */\nclass QuestionCard extends Component {\n  state = {\n    vote: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { authedUser, question_id, author } = this.props;\n    const { vote } = this.state;\n    if (vote === '') {\n      alert('You cannot leave it blank. Please choose one option!');\n    } else {\n      this.props.dispatch(\n        handleSaveQuestionAnswer(authedUser, question_id, vote, author)\n      );\n    }\n  };\n\n  render() {\n    const { name, avatarURL, optionOneText, optionTwoText } = this.props;\n\n    return (\n      <div className='qcard-row'>\n        <div className='qcard-column qcard-left'>\n          <TeaserAvatar author={name} avatarURL={avatarURL} />\n        </div>\n        <div className='qcard-column qcard-right'>\n          <div className='qcard-card-title'>Would You Rather</div>\n          <div>\n            <input\n              type='radio'\n              id='optionOne'\n              name='options'\n              value='optionOne'\n              onChange={() => this.setState({ vote: 'optionOne' })}\n            ></input>\n            {optionOneText}\n          </div>\n          <div>\n            <input\n              type='radio'\n              id='optionTwo'\n              name='options'\n              value='optionTwo'\n              onChange={() => this.setState({ vote: 'optionTwo' })}\n            ></input>\n            {optionTwoText}\n          </div>\n          <div className='qcard-btn-container'>\n            <button\n              className='qcard-submit-btn'\n              onClick={this.handleSubmit}\n              disabled={this.state.vote === ''}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuestionCard.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  question_id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionTwoText: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ users, questions, authedUser }, ownProps) {\n  const { question_id } = ownProps;\n  const { author } = questions[question_id];\n  const { name, avatarURL } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  return {\n    authedUser,\n    question_id,\n    author,\n    name,\n    avatarURL,\n    optionOneText,\n    optionTwoText,\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);\n"]},"metadata":{},"sourceType":"module"}