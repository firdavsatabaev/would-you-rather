{"ast":null,"code":"var _jsxFileName = \"/home/firdavs/would-you-rather/src/components/HomePage/Tabs.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/Tabs.css';\nimport TeaserCard from './TeaserCard';\n/**\n * Class component representing the questions on both tabs of the home page.\n * @extends Component\n */\n\nclass Tabs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTab: 'unansweredQuestions'\n    };\n  }\n\n  fetchQuestions() {\n    const {\n      users,\n      questions,\n      authedUser\n    } = this.props;\n    const answeredQuestions = Object.keys(users[authedUser].answers);\n    const unansweredQuestions = Object.keys(questions).filter(id => !answeredQuestions.includes(id));\n    let unansweredQuestionsArray = [];\n    unansweredQuestions.map(questionId => unansweredQuestionsArray.push({\n      questionId,\n      author: users[questions[questionId].author].name,\n      avatarURL: users[questions[questionId].author].avatarURL,\n      optionOne: questions[questionId].optionOne.text,\n      optionTwo: questions[questionId].optionTwo.text,\n      timestamp: questions[questionId].timestamp\n    }));\n    unansweredQuestionsArray.sort((a, b) => b.timestamp - a.timestamp);\n    let answeredQuestionsArray = [];\n    answeredQuestions.map(questionId => answeredQuestionsArray.push({\n      questionId,\n      author: users[questions[questionId].author].name,\n      avatarURL: users[questions[questionId].author].avatarURL,\n      optionOne: questions[questionId].optionOne.text,\n      optionTwo: questions[questionId].optionTwo.text,\n      timestamp: questions[questionId].timestamp\n    }));\n    answeredQuestionsArray.sort((a, b) => b.timestamp - a.timestamp);\n    return {\n      unansweredQuestions: unansweredQuestionsArray,\n      answeredQuestions: answeredQuestionsArray\n    };\n  }\n\n  render() {\n    const {\n      unansweredQuestions,\n      answeredQuestions\n    } = this.fetchQuestions();\n    const {\n      currentTab\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-column card-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `tab-title ${currentTab === 'unansweredQuestions' && 'active-tab'}`,\n      onClick: () => this.setState({\n        currentTab: 'unansweredQuestions'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"UNANSWERED QUESTIONS\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-column card-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `tab-title ${currentTab === 'answeredQuestions' && 'active-tab'}`,\n      onClick: () => this.setState({\n        currentTab: 'answeredQuestions'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"ANSWERED QUESTIONS\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, currentTab === 'unansweredQuestions' && unansweredQuestions.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TeaserCard, {\n      questionId: question.questionId,\n      author: question.author,\n      avatarURL: question.avatarURL,\n      optionOne: question.optionOne,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }))), currentTab === 'answeredQuestions' && answeredQuestions.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TeaserCard, {\n      questionId: question.questionId,\n      author: question.author,\n      avatarURL: question.avatarURL,\n      optionOne: question.optionOne,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nTabs.propType = {\n  users: PropTypes.object.isRequired,\n  questions: PropTypes.object.isRequired,\n  authedUser: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps({\n  users,\n  questions,\n  authedUser\n}) {\n  return {\n    users,\n    questions,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Tabs);","map":{"version":3,"sources":["/home/firdavs/would-you-rather/src/components/HomePage/Tabs.js"],"names":["React","Component","PropTypes","connect","TeaserCard","Tabs","state","currentTab","fetchQuestions","users","questions","authedUser","props","answeredQuestions","Object","keys","answers","unansweredQuestions","filter","id","includes","unansweredQuestionsArray","map","questionId","push","author","name","avatarURL","optionOne","text","optionTwo","timestamp","sort","a","b","answeredQuestionsArray","render","setState","question","index","propType","object","isRequired","string","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/Tabs.css';\nimport TeaserCard from './TeaserCard';\n\n/**\n * Class component representing the questions on both tabs of the home page.\n * @extends Component\n */\nclass Tabs extends Component {\n  state = {\n    currentTab: 'unansweredQuestions',\n  };\n\n  fetchQuestions() {\n    const { users, questions, authedUser } = this.props;\n    const answeredQuestions = Object.keys(users[authedUser].answers);\n    const unansweredQuestions = Object.keys(questions).filter(\n      id => !answeredQuestions.includes(id)\n    );\n\n    let unansweredQuestionsArray = [];\n    unansweredQuestions.map(questionId =>\n      unansweredQuestionsArray.push({\n        questionId,\n        author: users[questions[questionId].author].name,\n        avatarURL: users[questions[questionId].author].avatarURL,\n        optionOne: questions[questionId].optionOne.text,\n        optionTwo: questions[questionId].optionTwo.text,\n        timestamp: questions[questionId].timestamp,\n      })\n    );\n    unansweredQuestionsArray.sort((a, b) => b.timestamp - a.timestamp);\n\n    let answeredQuestionsArray = [];\n    answeredQuestions.map(questionId =>\n      answeredQuestionsArray.push({\n        questionId,\n        author: users[questions[questionId].author].name,\n        avatarURL: users[questions[questionId].author].avatarURL,\n        optionOne: questions[questionId].optionOne.text,\n        optionTwo: questions[questionId].optionTwo.text,\n        timestamp: questions[questionId].timestamp,\n      })\n    );\n    answeredQuestionsArray.sort((a, b) => b.timestamp - a.timestamp);\n\n    return {\n      unansweredQuestions: unansweredQuestionsArray,\n      answeredQuestions: answeredQuestionsArray,\n    };\n  }\n\n  render() {\n    const { unansweredQuestions, answeredQuestions } = this.fetchQuestions();\n    const { currentTab } = this.state;\n\n    return (\n      <div className='content-container'>\n        <div className='content-header'>\n          <div className='card-column card-left'>\n            <button\n              className={`tab-title ${\n                currentTab === 'unansweredQuestions' && 'active-tab'\n              }`}\n              onClick={() =>\n                this.setState({ currentTab: 'unansweredQuestions' })\n              }\n            >\n              UNANSWERED QUESTIONS\n            </button>\n          </div>\n          <div className='card-column card-right'>\n            <button\n              className={`tab-title ${\n                currentTab === 'answeredQuestions' && 'active-tab'\n              }`}\n              onClick={() => this.setState({ currentTab: 'answeredQuestions' })}\n            >\n              ANSWERED QUESTIONS\n            </button>\n          </div>\n        </div>\n        <div className='content-body'>\n          {currentTab === 'unansweredQuestions' &&\n            unansweredQuestions.map((question, index) => (\n              <div key={index}>\n                <TeaserCard\n                  questionId={question.questionId}\n                  author={question.author}\n                  avatarURL={question.avatarURL}\n                  optionOne={question.optionOne}\n                />\n              </div>\n            ))}\n          {currentTab === 'answeredQuestions' &&\n            answeredQuestions.map((question, index) => (\n              <div key={index}>\n                <TeaserCard\n                  questionId={question.questionId}\n                  author={question.author}\n                  avatarURL={question.avatarURL}\n                  optionOne={question.optionOne}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nTabs.propType = {\n  users: PropTypes.object.isRequired,\n  questions: PropTypes.object.isRequired,\n  authedUser: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ users, questions, authedUser }) {\n  return {\n    users,\n    questions,\n    authedUser,\n  };\n}\n\nexport default connect(mapStateToProps)(Tabs);\n"]},"metadata":{},"sourceType":"module"}