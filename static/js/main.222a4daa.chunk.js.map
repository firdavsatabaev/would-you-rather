{"version":3,"sources":["assets/avatars/avatar1.svg","assets/avatars/avatar2.svg","assets/avatars/avatar3.svg","assets/avatars/avatar4.svg","assets/avatars/avatar5.svg","assets/images/404.svg","actions/authedUser.js","_DATA.js","actions/questions.js","actions/users.js","actions/currentTab.js","reducers/index.js","reducers/users.js","reducers/questions.js","reducers/authedUser.js","reducers/currentTab.js","middlewares/index.js","components/LandingPage/LandingPage.js","components/LandingPage/SignInputBox.js","components/LandingPage/SignUpPage.js","components/LandingPage/SignInPage.js","components/PostQuestionPage/NewQuestionCard.js","components/Leaderboard/LeaderCard.js","components/Leaderboard/LeaderCards.js","components/HomePage/TeaserAvatar.js","components/HomePage/ResultsCard.js","components/HomePage/QuestionCard.js","components/NotFoundPage.js","components/HomePage/PollDetails.js","components/NavBar/NavAvatar.js","components/NavBar/NavBar.js","components/HomePage/TeaserCard.js","components/HomePage/Tabs.js","components/App.js","actions/shared.js","index.js"],"names":["module","exports","setAuthedUser","authedUser","type","users","sarahedo","id","password","name","avatarURL","avatar1","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","avatar2","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","avatar3","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","_verifyUser","username","Object","keys","includes","handleSaveQuestionAnswer","qid","answer","dispatch","saveQuestionAnswer","question_id","Promise","res","rej","setTimeout","concat","_saveQuestionAnswer","console","log","handleAddQuestion","question","formattedQuestion","handleAddUser","addUser","setCurrentTab","currentTab","combineReducers","state","action","loadingBar","loadingBarReducer","applyMiddleware","thunk","LandingPage","props","className","to","SignInputBox","label","inputName","onChange","value","e","target","SignUpPage","repeatPassword","nonMatchingPasswords","usernameTaken","successfulAccount","anyBlankField","pickRandomAvatar","avatarNames","avatar4","avatar5","floor","length","handleInput","inputType","inputValue","setState","handleSubmit","preventDefault","randomAvatarURL","this","onClick","style","textDecoration","color","Component","connect","SignInPage","incorrectCredentials","params","match","param","param2","history","push","undefined","NewQuestionCard","option","alert","placeholder","event","LeaderCard","answersNumber","questionsNumber","score","src","alt","width","height","organizedUsersList","forEach","user","userInfo","sort","a","b","organizeLeaders","map","index","key","TeaserAvatar","ownProps","optionOneVotesNumber","optionTwoVotesNumber","votedOption","totalVotes","optionOnePercent","round","optionTwoPercent","background","QuestionCard","vote","disabled","NotFoundPage","notFoundPic","authedUserName","authedUserAvatarURL","handleClick","tab","TeaserCard","questionId","Tabs","answeredQuestions","unansweredQuestions","filter","unansweredQuestionsArray","answeredQuestionsArray","fetchQuestions","propType","PropTypes","object","isRequired","string","App","showLoading","all","then","receiveUsers","receiveQuestions","hideLoading","exact","path","component","PollDetails","LeaderCards","store","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.222a4daa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar1.a442529d.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar2.7f3eeb9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar3.79c5652d.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar4.93b44984.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar5.564fbbb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.e71d806c.svg\";","export const SET_AUTHED_USER = 'SET_AUTHED_USER';\n\nexport function setAuthedUser(authedUser) {\n  return {\n    type: SET_AUTHED_USER,\n    authedUser,\n  };\n}\n","import avatar1 from './assets/avatars/avatar1.svg';\nimport avatar2 from './assets/avatars/avatar2.svg';\nimport avatar3 from './assets/avatars/avatar3.svg';\n\nlet users = {\n  sarahedo: {\n    id: 'sarahedo',\n    password: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: avatar1,\n    answers: {\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\n      loxhs1bqm25b708cmbf3g: 'optionTwo',\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    password: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: avatar2,\n    answers: {\n      vthrdm985a262al8qx3do: 'optionOne',\n      xj352vofupe1dqz9emx13r: 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    password: 'johndoe',\n    name: 'John Doe',\n    avatarURL: avatar3,\n    answers: {\n      xj352vofupe1dqz9emx13r: 'optionOne',\n      vthrdm985a262al8qx3do: 'optionTwo',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  },\n};\n\nlet questions = {\n  '8xf0y6ziyjabvozdd253nd': {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory',\n    },\n  },\n  '6ni6ok3ym7mf1p33lnez': {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain',\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic',\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer',\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500',\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift',\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nexport function formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n\nexport function _verifyUser(username) {\n  return Object.keys(users).includes(username);\n}\n\nexport function _verifyQuestion(question_id) {\n  return Object.keys(questions).includes(question_id);\n}\n","import {\n  _saveQuestionAnswer,\n  _saveQuestion,\n  _verifyUser,\n  _verifyQuestion,\n  formatQuestion,\n} from '../_DATA';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER';\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  };\n}\n\nfunction saveQuestionAnswer(authedUser, qid, answer) {\n  return {\n    type: SAVE_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer,\n  };\n}\n\nexport function handleSaveQuestionAnswer(authedUser, qid, answer, author) {\n  return dispatch => {\n    dispatch(saveQuestionAnswer(authedUser, qid, answer));\n    if (\n      _verifyUser(author) &&\n      _verifyUser(authedUser) &&\n      _verifyQuestion(qid)\n    ) {\n      return _saveQuestionAnswer({ authedUser, qid, answer });\n    } else {\n      console.log(\n        'It looks like the user or the question is not in the backend but still exists in the local storage. So, your answer is stored in local storage. Upon refresh, you might lose it.'\n      );\n    }\n  };\n}\n\nfunction addQuestion(formattedQuestion) {\n  return {\n    type: ADD_QUESTION,\n    formattedQuestion,\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\n  return dispatch => {\n    dispatch(\n      addQuestion(formatQuestion({ optionOneText, optionTwoText, author }))\n    );\n    if (_verifyUser(author)) {\n      return _saveQuestion({ optionOneText, optionTwoText, author });\n    } else {\n      console.log(\n        'There was a problem adding question to the backend, probably because the user is not in the backend while persisted in the local storage.'\n      );\n    }\n  };\n}\n","export const ADD_USER = 'ADD_USER';\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USER,\n    users,\n  };\n}\n\nfunction addUser(name, username, password, avatarURL) {\n  return {\n    type: ADD_USER,\n    name,\n    username,\n    password,\n    avatarURL,\n  };\n}\n\nexport function handleAddUser(name, username, password, avatarURL) {\n  return dispatch => {\n    dispatch(addUser(name, username, password, avatarURL));\n  };\n}\n","export const SET_CURRENT_TAB = 'SET_CURRENT_TAB';\n\nexport function setCurrentTab(currentTab) {\n  return {\n    type: SET_CURRENT_TAB,\n    currentTab,\n  };\n}\n","// combine the reducers and export them\nimport { combineReducers } from 'redux';\nimport { loadingBarReducer } from 'react-redux-loading';\nimport authedUser from './authedUser';\nimport questions from './questions';\nimport users from './users';\nimport currentTab from './currentTab';\n\nexport default combineReducers({\n  users,\n  questions,\n  authedUser,\n  currentTab,\n  loadingBar: loadingBarReducer,\n});\n","import { ADD_USER, RECEIVE_USER } from '../actions/users';\nimport { SAVE_QUESTION_ANSWER, ADD_QUESTION } from '../actions/questions';\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USER:\n      return {\n        ...state,\n        ...action.users,\n      };\n    case ADD_USER:\n      return {\n        ...state,\n        [action.username]: {\n          id: action.username,\n          password: action.password,\n          name: action.name,\n          avatarURL: action.avatarURL,\n          answers: {},\n          questions: [],\n        },\n      };\n    case SAVE_QUESTION_ANSWER:\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          answers: {\n            ...state[action.authedUser].answers,\n            [action.qid]: action.answer,\n          },\n        },\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.formattedQuestion.author]: {\n          ...state[action.formattedQuestion.author],\n          questions: state[action.formattedQuestion.author].questions.concat([\n            action.formattedQuestion.id,\n          ]),\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_QUESTION,\n  RECEIVE_QUESTIONS,\n  SAVE_QUESTION_ANSWER,\n} from '../actions/questions';\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions,\n      };\n    case SAVE_QUESTION_ANSWER:\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: state[action.qid][action.answer].votes.concat([\n              action.authedUser,\n            ]),\n          },\n        },\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.formattedQuestion.id]: action.formattedQuestion,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_AUTHED_USER } from '../actions/authedUser';\n\nexport default function authedUser(state = 'null', action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.authedUser;\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_TAB } from '../actions/currentTab';\n\nexport default function currentTab(state = 'null', action) {\n  if (action.type === SET_CURRENT_TAB) {\n    return action.currentTab;\n  } else {\n    return state;\n  }\n}\n","import thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\n\nexport default applyMiddleware(thunk);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../styles/LandingPage.css';\n\n/**\n * Functional component representing the landing page on /.\n */\nfunction LandingPage(props) {\n  return (\n    <div>\n      <div className='would-you-rather-text'>Would You Rather</div>\n      <Link to='/user/signup/form'>\n        <button className='landing-signup-button'>Sign Up</button>\n      </Link>\n      <span className='orText'>OR</span>\n      <Link to='/signin'>\n        <button className='landing-signin-button'>Sign In</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../styles/SignInputBox.css';\n\n/**\n * Functional component representing the input boxes for sign up and sign in pages.\n * @param Refer to PropTypes below.\n */\nfunction SignInputBox(props) {\n  const { label, inputName, onChange, value } = props;\n  return (\n    <div>\n      <div className='label'>{label}</div>\n      {label === 'Password:' || label === 'Repeat Password:' ? (\n        <input\n          type='password'\n          value={value}\n          onChange={e => onChange(inputName, e.target.value)}\n        ></input>\n      ) : (\n        <input\n          type='text'\n          value={value}\n          onChange={e => onChange(inputName, e.target.value)}\n        ></input>\n      )}\n    </div>\n  );\n}\n\nSignInputBox.propTypes = {\n  label: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default SignInputBox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SignInputBox from './SignInputBox';\nimport '../../styles/SignUpPage.css';\nimport { handleAddUser } from '../../actions/users';\nimport avatar1 from '../../assets/avatars/avatar1.svg';\nimport avatar2 from '../../assets/avatars/avatar2.svg';\nimport avatar3 from '../../assets/avatars/avatar3.svg';\nimport avatar4 from '../../assets/avatars/avatar4.svg';\nimport avatar5 from '../../assets/avatars/avatar5.svg';\n\n/**\n * Class component representing the Sign up page.\n * @extends Component\n */\nclass SignUpPage extends Component {\n  state = {\n    name: '',\n    username: '',\n    password: '',\n    repeatPassword: '',\n    nonMatchingPasswords: false,\n    usernameTaken: false,\n    successfulAccount: false,\n    anyBlankField: false,\n  };\n\n  pickRandomAvatar = () => {\n    // Credits: avataaars.io\n    const avatarNames = [avatar1, avatar2, avatar3, avatar4, avatar5];\n    return avatarNames[Math.floor(Math.random() * avatarNames.length)];\n  };\n\n  handleInput = (inputType, inputValue) => {\n    switch (inputType) {\n      case 'name':\n        this.setState({\n          name: inputValue,\n        });\n        break;\n      case 'username':\n        this.setState({\n          username: inputValue,\n        });\n        break;\n      case 'password':\n        this.setState({\n          password: inputValue,\n        });\n        break;\n      case 'repeatPassword':\n        this.setState({\n          repeatPassword: inputValue,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, username, password, repeatPassword } = this.state;\n    const { users } = this.props;\n    if (!name || !username || !password || !repeatPassword) {\n      this.setState({\n        anyBlankField: true,\n        nonMatchingPasswords: false,\n        usernameTaken: false,\n        successfulAccount: false,\n        name: '',\n        username: '',\n        password: '',\n        repeatPassword: '',\n      });\n    } else if (password !== repeatPassword) {\n      this.setState({\n        nonMatchingPasswords: true,\n        anyBlankField: false,\n        usernameTaken: false,\n        successfulAccount: false,\n        name: '',\n        username: '',\n        password: '',\n        repeatPassword: '',\n      });\n    } else {\n      if (username in users) {\n        this.setState({\n          usernameTaken: true,\n          nonMatchingPasswords: false,\n          successfulAccount: false,\n          anyBlankField: false,\n          name: '',\n          username: '',\n          password: '',\n          repeatPassword: '',\n        });\n      } else {\n        this.setState({\n          successfulAccount: true,\n          usernameTaken: false,\n          nonMatchingPasswords: false,\n          anyBlankField: false,\n          name: '',\n          username: '',\n          password: '',\n          repeatPassword: '',\n        });\n        const randomAvatarURL = this.pickRandomAvatar();\n        this.props.dispatch(\n          handleAddUser(name, username, password, randomAvatarURL)\n        );\n      }\n    }\n  };\n\n  render() {\n    const {\n      name,\n      username,\n      password,\n      repeatPassword,\n      nonMatchingPasswords,\n      usernameTaken,\n      successfulAccount,\n      anyBlankField,\n    } = this.state;\n    return (\n      <div className='signup-form-box'>\n        <div className='name-input'>\n          <SignInputBox\n            label='Name:'\n            inputName='name'\n            onChange={this.handleInput}\n            value={name}\n          />\n        </div>\n        <div className='username-input'>\n          <SignInputBox\n            label='Username:'\n            inputName='username'\n            onChange={this.handleInput}\n            value={username}\n          />\n        </div>\n        <div className='password-input'>\n          <SignInputBox\n            label='Password:'\n            inputName='password'\n            onChange={this.handleInput}\n            value={password}\n          />\n        </div>\n        <div className='repeat-password-input'>\n          <SignInputBox\n            label='Repeat Password:'\n            inputName='repeatPassword'\n            onChange={this.handleInput}\n            value={repeatPassword}\n          />\n        </div>\n        <div>\n          <button className='signup-signup-button' onClick={this.handleSubmit}>\n            SIGN UP\n          </button>\n        </div>\n        {nonMatchingPasswords && (\n          <p className='account-creation-message'>\n            The passwords did not match. Please try again!\n          </p>\n        )}\n        {usernameTaken && (\n          <p className='account-creation-message'>\n            The username is already taken. Please try another username!\n          </p>\n        )}\n        {successfulAccount && (\n          <p className='account-creation-message'>\n            Account was created successfully. &nbsp;\n            <Link\n              to='/signin'\n              style={{ textDecoration: 'none', color: 'white' }}\n            >\n              Please click here to log in!\n            </Link>\n          </p>\n        )}\n        {anyBlankField && (\n          <p className='account-creation-message'>\n            You cannot leave any field blank. Please try again!\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nSignUpPage.propTypes = {\n  users: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport { setCurrentTab } from '../../actions/currentTab';\nimport SignInputBox from './SignInputBox';\nimport '../../styles/SignInPage.css';\n\n/**\n * Class component representing the sign in page.\n * @extends Component\n */\nclass SignInPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    incorrectCredentials: false,\n    anyBlankField: false,\n  };\n\n  handleInput = (inputType, inputValue) => {\n    switch (inputType) {\n      case 'username':\n        this.setState({\n          username: inputValue,\n        });\n        break;\n      case 'password':\n        this.setState({\n          password: inputValue,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      match: { params },\n    } = this.props;\n    const { param, param2 } = params;\n    const { username, password } = this.state;\n    const { users } = this.props;\n    \n    if (!username || !password) {\n      this.setState({\n        anyBlankField: true,\n        incorrectCredentials: false,\n        username: '',\n        password: '',\n      });\n    } else {\n      if (users[username]) {\n        const recordedPassword = users[username].password;\n        if (recordedPassword === password) {\n          // Log in successfully by routing to the next page\n          this.props.dispatch(setAuthedUser(username));\n          switch (param) {\n            case 'signin':\n            case 'questions':\n              this.props.dispatch(setCurrentTab('home'));\n              break;\n            case 'add':\n              this.props.dispatch(setCurrentTab('newQuestion'));\n              break;\n            case 'leaderboard':\n              this.props.dispatch(setCurrentTab('leaderboard'));\n              break;\n            default:\n              this.props.dispatch(setCurrentTab('home'));\n              break;\n          }\n\n          if (param === 'signin') {\n            this.props.history.push('/questions');\n          } else {\n            if (param2 !== undefined) {\n              this.props.history.push(`/${param}/${param2}`);\n            } else {\n              this.props.history.push(`/${param}`);\n            }\n          }\n        } else {\n          this.setState({\n            anyBlankField: false,\n            incorrectCredentials: true,\n            username: '',\n            password: '',\n          });\n        }\n      } else {\n        this.setState({\n          anyBlankField: false,\n          incorrectCredentials: true,\n          username: '',\n          password: '',\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      username,\n      password,\n      anyBlankField,\n      incorrectCredentials,\n    } = this.state;\n    return (\n      <div className='signin-form-box'>\n        <div className='username-input'>\n          <SignInputBox\n            label='Username:'\n            inputName='username'\n            onChange={this.handleInput}\n            value={username}\n          />\n        </div>\n        <div className='password-input'>\n          <SignInputBox\n            label='Password:'\n            inputName='password'\n            onChange={this.handleInput}\n            value={password}\n          />\n        </div>\n        <div>\n          <button className='signin-signin-button' onClick={this.handleSubmit}>\n            SIGN IN\n          </button>\n        </div>\n        {anyBlankField && (\n          <p className='account-creation-message'>\n            You cannot leave any field blank. Please try again!\n          </p>\n        )}\n        {incorrectCredentials && (\n          <p className='account-creation-message'>\n            Either the username or password is incorrect. Please try again!\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nSignInPage.propTypes = {\n  users: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(SignInPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/NewQuestionCard.css';\nimport { handleAddQuestion } from '../../actions/questions';\nimport { setCurrentTab } from '../../actions/currentTab';\n\n/**\n * Class component representing the 'Post Your Question' page's submission card.\n * @extends Component\n */\nclass NewQuestionCard extends Component {\n  state = {};\n\n  handleInput = (option, value) => {\n    this.setState({ [option]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { authedUser } = this.props;\n    const { optionOne, optionTwo } = this.state;\n    if (!optionOne || !optionTwo) {\n      alert('You cannot leave any field blank. Please fill both!');\n    } else {\n      this.props.dispatch(handleAddQuestion(optionOne, optionTwo, authedUser));\n      this.props.dispatch(setCurrentTab('home'));\n      this.props.history.push('/questions');\n    }\n    this.setState({ optionOne: '', optionTwo: '' });\n  };\n\n  render() {\n    return (\n      <div className='new-question-container'>\n        <div className='new-question-title'>Would You Rather</div>\n        <input\n          type='text'\n          placeholder='Type your option one here...'\n          className='new-question-input'\n          onChange={event => this.handleInput('optionOne', event.target.value)}\n          value={this.state.optionOne || ''}\n        ></input>\n        <div className='new-question-ortext'>OR</div>\n        <input\n          type='text'\n          placeholder='Type your option two here...'\n          className='new-question-input'\n          onChange={event => this.handleInput('optionTwo', event.target.value)}\n          value={this.state.optionTwo || ''}\n        ></input>\n        <div className='submit-btn-container'>\n          <button\n            type='submit'\n            className='new-question-submit'\n            onClick={this.handleSubmit}\n          >\n            SUBMIT\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nNewQuestionCard.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser,\n  };\n}\n\nexport default connect(mapStateToProps)(NewQuestionCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../styles/LeaderCard.css';\n\n/**\n * Functional component representing each card containing users on leaderboard\n * @param Refer to PropTypes below\n */\nfunction LeaderCard(props) {\n  const { name, avatarURL, answersNumber, questionsNumber, score } = props;\n  return (\n    <div className='leadercard-row'>\n      <div className='leadercard-column leader-avatar'>\n        <img src={avatarURL} alt='User avatar' width='91' height='91' />\n        <h1>{name}</h1>\n      </div>\n      <div className='leadercard-column leader-numbers'>\n        <div>{answersNumber}</div>\n        <p>Answered Questions</p>\n        <div>{questionsNumber}</div>\n        <p>Created Questions</p>\n      </div>\n      <div className='leadercard-column leader-score'>\n        <div className='scorecard'>\n          <h5>Score</h5>\n          <h1>{score}</h1>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLeaderCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  answersNumber: PropTypes.number.isRequired,\n  questionsNumber: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default LeaderCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LeaderCard from './LeaderCard';\nimport '../../styles/LeaderCards.css';\n\n/**\n * Functional component representing the cards on LeaderBoard page.\n * @param Refer to PropTypes below.\n */\nfunction LeaderCards(props) {\n  const organizeLeaders = () => {\n    const { users } = props;\n    let organizedUsersList = [];\n    const usersList = Object.keys(users);\n    usersList.forEach(user => {\n      let userInfo = users[user];\n      const { name, avatarURL } = userInfo;\n      const answersNumber = Object.keys(userInfo.answers).length;\n      const questionsNumber = userInfo.questions.length;\n      const score = answersNumber + questionsNumber;\n      organizedUsersList.push({\n        name,\n        avatarURL,\n        answersNumber,\n        questionsNumber,\n        score,\n      });\n    });\n    organizedUsersList.sort((a, b) => b.score - a.score);\n    return organizedUsersList;\n  };\n\n  const organizedUsersList = organizeLeaders();\n\n  return (\n    <div className='leadercards-container'>\n      <div className='leadercard-container'>\n        {organizedUsersList.map((user, index) => (\n          <LeaderCard\n            name={user.name}\n            avatarURL={user.avatarURL}\n            answersNumber={user.answersNumber}\n            questionsNumber={user.questionsNumber}\n            score={user.score}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nLeaderCards.propTypes = {\n  users: PropTypes.object,\n};\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderCards);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../styles/TeaserAvatar.css';\n\n/**\n * Functional component representing the avatars on TeaserCard on homepage.\n * @param Refer to PropTypes below.\n */\nfunction TeaserAvatar(props) {\n  const { author, avatarURL } = props;\n  return (\n    <div className='avatar-container'>\n      <img src={avatarURL} alt='User Avatar' width='80' height='80' />\n      <div>{author}</div>\n    </div>\n  );\n}\n\nTeaserAvatar.propTypes = {\n  author: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n};\n\nexport default TeaserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/ResultsCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Function representing ResultsCard component showing the number of votes for each option.\n * @param Refer to PropTypes below.\n */\nfunction ResultsCard(props) {\n  const {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption,\n  } = props;\n  const totalVotes = optionOneVotesNumber + optionTwoVotesNumber;\n  const optionOnePercent = Math.round(\n    (optionOneVotesNumber / totalVotes) * 100\n  );\n  const optionTwoPercent = Math.round(\n    (optionTwoVotesNumber / totalVotes) * 100\n  );\n\n  return (\n    <div className='results-row'>\n      <div className='results-column results-left'>\n        <TeaserAvatar author={name} avatarURL={avatarURL} />\n      </div>\n      <div className='results-column results-right'>\n        <div className='results-card-title'>Results</div>\n        <div\n          className='option-one-result-container'\n          style={\n            votedOption === 'optionOne'\n              ? { background: '#3473df' }\n              : { background: '#30444e' }\n          }\n        >\n          {votedOption === 'optionOne' && (\n            <div className='badge'>Your Vote</div>\n          )}\n          <p className='answer-text'>{optionOneText}</p>\n          <div className='progress-bar-container'>\n            <div\n              className='progress-bar'\n              style={{ width: `${optionOnePercent}%` }}\n            ></div>\n          </div>\n          <div className='vote-count-container'>\n            <p className='votes-count'>\n              {optionOneVotesNumber} out of {totalVotes} votes\n            </p>\n            <p className='percentage'>{optionOnePercent}%</p>\n          </div>\n        </div>\n        <div\n          className='option-two-result-container'\n          style={\n            votedOption === 'optionTwo'\n              ? { background: '#3473df' }\n              : { background: '#30444e' }\n          }\n        >\n          {votedOption === 'optionTwo' && (\n            <div className='badge'>Your Vote</div>\n          )}\n          <p className='answer-text'>{optionTwoText}</p>\n\n          <div className='progress-bar-container'>\n            <div\n              className='progress-bar'\n              style={{ width: `${optionTwoPercent}%` }}\n            ></div>\n          </div>\n          <div className='vote-count-container'>\n            <p className='votes-count'>\n              {optionTwoVotesNumber} out of {totalVotes} votes\n            </p>\n            <p className='percentage'>{optionTwoPercent}%</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nResultsCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionOneVotesNumber: PropTypes.number,\n  optionTwoText: PropTypes.string.isRequired,\n  optionTwoVotesNumber: PropTypes.number,\n  votedOption: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ questions, users, authedUser }, ownProps) {\n  const { question_id } = ownProps;\n  const { author } = questions[question_id];\n  const { name, avatarURL } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionOneVotesNumber = questions[question_id].optionOne.votes.length;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  const optionTwoVotesNumber = questions[question_id].optionTwo.votes.length;\n  const votedOption = users[authedUser].answers[question_id];\n  return {\n    name,\n    avatarURL,\n    optionOneText,\n    optionOneVotesNumber,\n    optionTwoText,\n    optionTwoVotesNumber,\n    votedOption,\n  };\n}\n\nexport default connect(mapStateToProps)(ResultsCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { handleSaveQuestionAnswer } from '../../actions/questions';\nimport '../../styles/QuestionCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Class representing QuestionCard component shown on homepage.\n * @extends Component\n */\nclass QuestionCard extends Component {\n  state = {\n    vote: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { authedUser, question_id, author } = this.props;\n    const { vote } = this.state;\n    if (vote === '') {\n      alert('You cannot leave it blank. Please choose one option!');\n    } else {\n      this.props.dispatch(\n        handleSaveQuestionAnswer(authedUser, question_id, vote, author)\n      );\n    }\n  };\n\n  render() {\n    const { name, avatarURL, optionOneText, optionTwoText } = this.props;\n\n    return (\n      <div className='qcard-row'>\n        <div className='qcard-column qcard-left'>\n          <TeaserAvatar author={name} avatarURL={avatarURL} />\n        </div>\n        <div className='qcard-column qcard-right'>\n          <div className='qcard-card-title'>Would You Rather</div>\n          <div>\n            <input\n              type='radio'\n              id='optionOne'\n              name='options'\n              value='optionOne'\n              onChange={() => this.setState({ vote: 'optionOne' })}\n            ></input>\n            {optionOneText}\n          </div>\n          <div>\n            <input\n              type='radio'\n              id='optionTwo'\n              name='options'\n              value='optionTwo'\n              onChange={() => this.setState({ vote: 'optionTwo' })}\n            ></input>\n            {optionTwoText}\n          </div>\n          <div className='qcard-btn-container'>\n            <button\n              className='qcard-submit-btn'\n              onClick={this.handleSubmit}\n              disabled={this.state.vote === ''}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuestionCard.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  question_id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOneText: PropTypes.string.isRequired,\n  optionTwoText: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ users, questions, authedUser }, ownProps) {\n  const { question_id } = ownProps;\n  const { author } = questions[question_id];\n  const { name, avatarURL } = users[author];\n  const optionOneText = questions[question_id].optionOne.text;\n  const optionTwoText = questions[question_id].optionTwo.text;\n  return {\n    authedUser,\n    question_id,\n    author,\n    name,\n    avatarURL,\n    optionOneText,\n    optionTwoText,\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);\n","import React from 'react';\nimport '../styles/NotFoundPage.css';\nimport notFoundPic from '../assets/images/404.svg';\n\nfunction NotFoundPage(props) {\n  return (\n    <div className='not-found-container'>\n      <img src={notFoundPic} alt='404 error' />\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ResultsCard from './ResultsCard';\nimport QuestionCard from './QuestionCard';\nimport NotFoundPage from '../NotFoundPage';\n\n/**\n * Functional component representing poll details component.\n * @param Refer to PropTypes\n */\nfunction PollDetails(props) {\n  const {\n    match: { params },\n  } = props;\n  const { question_id } = params;\n  const { authedUser, users, questions } = props;\n\n  return (\n    <div>\n      {questions[question_id] ? (\n        <div>\n          {Object.keys(users[authedUser].answers).includes(question_id) ? (\n            <ResultsCard question_id={question_id} />\n          ) : (\n            <QuestionCard question_id={question_id} />\n          )}\n        </div>\n      ) : (\n        <NotFoundPage />\n      )}\n    </div>\n  );\n}\n\nPollDetails.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  users: PropTypes.object.isRequired,\n  questions: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ authedUser, users, questions }) {\n  return {\n    authedUser,\n    users,\n    questions,\n  };\n}\n\nexport default connect(mapStateToProps)(PollDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/NavAvatar.css';\n\n/**\n * Functional component representing the avatars on navbar.\n * @param Refer to PropTypes below.\n */\nfunction NavAvatar(props) {\n  const { authedUser, users } = props;\n  const authedUserName = users[authedUser].name;\n  const authedUserAvatarURL = users[authedUser].avatarURL;\n  return (\n    <span>\n      {authedUserName}\n      <img src={authedUserAvatarURL} alt='User Avatar' width='50' height='50' />\n    </span>\n  );\n}\n\nNavAvatar.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  users: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    authedUser,\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(NavAvatar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport { setCurrentTab } from '../../actions/currentTab';\nimport NavAvatar from './NavAvatar';\nimport '../../styles/NavBar.css';\n\n/**\n * Functional component representing the navbar.\n * @param Refer to PropTypes below.\n */\nfunction NavBar(props) {\n  const handleClick = tab => {\n    props.dispatch(setCurrentTab(tab));\n  };\n\n  const handleLogOut = () => {\n    props.dispatch(setAuthedUser('null'));\n    props.dispatch(setCurrentTab('null'));\n  };\n\n  const { currentTab, authedUser } = props;\n  return (\n    <div className='navbar'>\n      <Link\n        to='/questions'\n        onClick={() => handleClick('home')}\n        className={`navbar-home-button ${\n          currentTab === 'home' ? 'active' : 'passive'\n        }`}\n      >\n        HOME\n      </Link>\n      <Link\n        to='/add'\n        onClick={() => handleClick('newQuestion')}\n        className={`navbar-post-button ${\n          currentTab === 'newQuestion' ? 'active' : 'passive'\n        }`}\n      >\n        POST YOUR QUESTION\n      </Link>\n      <Link\n        to='/leaderboard'\n        onClick={() => handleClick('leaderboard')}\n        className={`navbar-leaderboard-button ${\n          currentTab === 'leaderboard' ? 'active' : 'passive'\n        }`}\n      >\n        LEADERBOARD\n      </Link>\n      {authedUser !== 'null' && (\n        <div>\n          <NavAvatar />\n          <Link\n            to='/signin'\n            style={{ textDecoration: 'none' }}\n            onClick={handleLogOut}\n          >\n            <button className='logout-button'>LOG OUT</button>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  currentTab: PropTypes.string.isRequired,\n  authedUser: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ currentTab, authedUser }) {\n  return {\n    currentTab,\n    authedUser,\n  };\n}\n\nexport default connect(mapStateToProps)(NavBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../../styles/TeaserCard.css';\nimport TeaserAvatar from './TeaserAvatar';\n\n/**\n * Functional component representing the TeaserCard on the home page.\n * @param Refer to PropTypes below.\n */\nfunction TeaserCard(props) {\n  const { questionId, author, avatarURL, optionOne } = props;\n  return (\n    <div className='row'>\n      <div className='column left'>\n        <TeaserAvatar author={author} avatarURL={avatarURL} />\n      </div>\n      <div className='column right'>\n        <div className='card-title'>Would You Rather</div>\n        <div className='question-teaser'>{optionOne} or ...</div>\n        <Link\n          to={`/questions/${questionId}`}\n          style={{ textDecoration: 'none' }}\n        >\n          <button className='view-poll-btn'>VIEW POLL</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nTeaserCard.propTypes = {\n  questionId: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  optionOne: PropTypes.string,\n};\n\nexport default TeaserCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/Tabs.css';\nimport TeaserCard from './TeaserCard';\n\n/**\n * Class component representing the questions on both tabs of the home page.\n * @extends Component\n */\nclass Tabs extends Component {\n  state = {\n    currentTab: 'unansweredQuestions',\n  };\n\n  fetchQuestions() {\n    const { users, questions, authedUser } = this.props;\n    const answeredQuestions = Object.keys(users[authedUser].answers);\n    const unansweredQuestions = Object.keys(questions).filter(\n      id => !answeredQuestions.includes(id)\n    );\n\n    let unansweredQuestionsArray = [];\n    unansweredQuestions.map(questionId =>\n      unansweredQuestionsArray.push({\n        questionId,\n        author: users[questions[questionId].author].name,\n        avatarURL: users[questions[questionId].author].avatarURL,\n        optionOne: questions[questionId].optionOne.text,\n        optionTwo: questions[questionId].optionTwo.text,\n        timestamp: questions[questionId].timestamp,\n      })\n    );\n    unansweredQuestionsArray.sort((a, b) => b.timestamp - a.timestamp);\n\n    let answeredQuestionsArray = [];\n    answeredQuestions.map(questionId =>\n      answeredQuestionsArray.push({\n        questionId,\n        author: users[questions[questionId].author].name,\n        avatarURL: users[questions[questionId].author].avatarURL,\n        optionOne: questions[questionId].optionOne.text,\n        optionTwo: questions[questionId].optionTwo.text,\n        timestamp: questions[questionId].timestamp,\n      })\n    );\n    answeredQuestionsArray.sort((a, b) => b.timestamp - a.timestamp);\n\n    return {\n      unansweredQuestions: unansweredQuestionsArray,\n      answeredQuestions: answeredQuestionsArray,\n    };\n  }\n\n  render() {\n    const { unansweredQuestions, answeredQuestions } = this.fetchQuestions();\n    const { currentTab } = this.state;\n\n    return (\n      <div className='content-container'>\n        <div className='content-header'>\n          <div className='card-column card-left'>\n            <button\n              className={`tab-title ${\n                currentTab === 'unansweredQuestions' && 'active-tab'\n              }`}\n              onClick={() =>\n                this.setState({ currentTab: 'unansweredQuestions' })\n              }\n            >\n              UNANSWERED QUESTIONS\n            </button>\n          </div>\n          <div className='card-column card-right'>\n            <button\n              className={`tab-title ${\n                currentTab === 'answeredQuestions' && 'active-tab'\n              }`}\n              onClick={() => this.setState({ currentTab: 'answeredQuestions' })}\n            >\n              ANSWERED QUESTIONS\n            </button>\n          </div>\n        </div>\n        <div className='content-body'>\n          {currentTab === 'unansweredQuestions' &&\n            unansweredQuestions.map((question, index) => (\n              <div key={index}>\n                <TeaserCard\n                  questionId={question.questionId}\n                  author={question.author}\n                  avatarURL={question.avatarURL}\n                  optionOne={question.optionOne}\n                />\n              </div>\n            ))}\n          {currentTab === 'answeredQuestions' &&\n            answeredQuestions.map((question, index) => (\n              <div key={index}>\n                <TeaserCard\n                  questionId={question.questionId}\n                  author={question.author}\n                  avatarURL={question.avatarURL}\n                  optionOne={question.optionOne}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nTabs.propType = {\n  users: PropTypes.object.isRequired,\n  questions: PropTypes.object.isRequired,\n  authedUser: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps({ users, questions, authedUser }) {\n  return {\n    users,\n    questions,\n    authedUser,\n  };\n}\n\nexport default connect(mapStateToProps)(Tabs);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading';\nimport { Route, Switch } from 'react-router-dom';\nimport handleReceiveData from '../actions/shared';\nimport LandingPage from './LandingPage/LandingPage';\nimport SignUpPage from './LandingPage/SignUpPage';\nimport SignInPage from './LandingPage/SignInPage';\nimport NewQuestionCard from './PostQuestionPage/NewQuestionCard';\nimport LeaderCards from './Leaderboard/LeaderCards';\nimport PollDetails from './HomePage/PollDetails';\nimport NavBar from './NavBar/NavBar';\nimport Tabs from './HomePage/Tabs';\nimport NotFoundPage from './NotFoundPage';\nimport '../styles/App.css';\n\n/**\n * Class component representing the App component containing all other components and responsible for routing.\n * @extends Component\n */\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleReceiveData());\n  }\n  render() {\n    const { authedUser } = this.props;\n    return (\n      <div>\n        <LoadingBar />\n        {authedUser === 'null' ? (\n          <div>\n            <NavBar />\n            <Route exact path='/' component={LandingPage} />\n            <Route exact path='/user/signup/form' component={SignUpPage} />\n            <Route exact path='/:param' component={SignInPage} />\n            <Route exact path='/:param/:param2' component={SignInPage} />\n          </div>\n        ) : (\n          <div>\n            <NavBar />\n            <Switch>\n              <Route exact path='/questions' component={Tabs} />\n              <Route path='/questions/:question_id' component={PollDetails} />\n              <Route path='/add' component={NewQuestionCard} />\n              <Route path='/leaderboard' component={LeaderCards} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  authedUser: PropTypes.string,\n};\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { showLoading, hideLoading } from 'react-redux-loading';\nimport { _getUsers, _getQuestions } from '../_DATA';\nimport { receiveUsers } from './users';\nimport { receiveQuestions } from './questions';\n\nexport default function handleReceiveData() {\n  return dispatch => {\n    dispatch(showLoading());\n    return Promise.all([_getUsers(), _getQuestions()]).then(\n      ([users, questions]) => {\n        dispatch(receiveUsers(users));\n        dispatch(receiveQuestions(questions));\n        dispatch(hideLoading());\n      }\n    );\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers';\nimport middleware from './middlewares';\nimport App from '../src/components/App';\nimport './styles/index.css';\n\nlet store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}